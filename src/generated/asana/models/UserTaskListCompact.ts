/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { WorkspaceCompact } from './WorkspaceCompact.js';
import {
    WorkspaceCompactFromJSON,
    WorkspaceCompactFromJSONTyped,
    WorkspaceCompactToJSON,
    WorkspaceCompactToJSONTyped,
} from './WorkspaceCompact.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';

/**
 * A user task list represents the tasks assigned to a particular user. It provides API access to a userâ€™s [My tasks](https://asana.com/guide/help/fundamentals/my-tasks) view in Asana.
 * @export
 * @interface UserTaskListCompact
 */
export interface UserTaskListCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof UserTaskListCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof UserTaskListCompact
     */
    readonly resourceType?: string;
    /**
     * The name of the user task list.
     * @type {string}
     * @memberof UserTaskListCompact
     */
    name?: string;
    /**
     * The owner of the user task list, i.e. the person whose My Tasks is represented by this resource.
     * @type {UserCompact}
     * @memberof UserTaskListCompact
     */
    readonly owner?: UserCompact;
    /**
     * The workspace in which the user task list is located.
     * @type {WorkspaceCompact}
     * @memberof UserTaskListCompact
     */
    readonly workspace?: WorkspaceCompact;
}

/**
 * Check if a given object implements the UserTaskListCompact interface.
 */
export function instanceOfUserTaskListCompact(value: object): value is UserTaskListCompact {
    return true;
}

export function UserTaskListCompactFromJSON(json: any): UserTaskListCompact {
    return UserTaskListCompactFromJSONTyped(json, false);
}

export function UserTaskListCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserTaskListCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'owner': json['owner'] == null ? undefined : UserCompactFromJSON(json['owner']),
        'workspace': json['workspace'] == null ? undefined : WorkspaceCompactFromJSON(json['workspace']),
    };
}

export function UserTaskListCompactToJSON(json: any): UserTaskListCompact {
    return UserTaskListCompactToJSONTyped(json, false);
}

export function UserTaskListCompactToJSONTyped(value?: Omit<UserTaskListCompact, 'gid'|'resource_type'|'owner'|'workspace'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
    };
}

