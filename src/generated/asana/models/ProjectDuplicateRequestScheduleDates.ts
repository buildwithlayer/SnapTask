/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * A dictionary of options to auto-shift dates. `task_dates` must be included to use this option. Requires either `start_on` or `due_on`, but not both.
 * @export
 * @interface ProjectDuplicateRequestScheduleDates
 */
export interface ProjectDuplicateRequestScheduleDates {
    /**
     * Determines if the auto-shifted dates should skip weekends.
     * @type {boolean}
     * @memberof ProjectDuplicateRequestScheduleDates
     */
    shouldSkipWeekends: boolean;
    /**
     * Sets the last due date in the duplicated project to the given date. The rest of the due dates will be offset by the same amount as the due dates in the original project.
     * @type {string}
     * @memberof ProjectDuplicateRequestScheduleDates
     */
    dueOn?: string;
    /**
     * Sets the first start date in the duplicated project to the given date. The rest of the start dates will be offset by the same amount as the start dates in the original project.
     * @type {string}
     * @memberof ProjectDuplicateRequestScheduleDates
     */
    startOn?: string;
}

/**
 * Check if a given object implements the ProjectDuplicateRequestScheduleDates interface.
 */
export function instanceOfProjectDuplicateRequestScheduleDates(value: object): value is ProjectDuplicateRequestScheduleDates {
    if (!('shouldSkipWeekends' in value) || value['shouldSkipWeekends'] === undefined) return false;
    return true;
}

export function ProjectDuplicateRequestScheduleDatesFromJSON(json: any): ProjectDuplicateRequestScheduleDates {
    return ProjectDuplicateRequestScheduleDatesFromJSONTyped(json, false);
}

export function ProjectDuplicateRequestScheduleDatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectDuplicateRequestScheduleDates {
    if (json == null) {
        return json;
    }
    return {
        
        'shouldSkipWeekends': json['should_skip_weekends'],
        'dueOn': json['due_on'] == null ? undefined : json['due_on'],
        'startOn': json['start_on'] == null ? undefined : json['start_on'],
    };
}

export function ProjectDuplicateRequestScheduleDatesToJSON(json: any): ProjectDuplicateRequestScheduleDates {
    return ProjectDuplicateRequestScheduleDatesToJSONTyped(json, false);
}

export function ProjectDuplicateRequestScheduleDatesToJSONTyped(value?: ProjectDuplicateRequestScheduleDates | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'should_skip_weekends': value['shouldSkipWeekends'],
        'due_on': value['dueOn'],
        'start_on': value['startOn'],
    };
}

