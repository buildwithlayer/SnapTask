/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { UserBaseResponseAllOfPhoto } from './UserBaseResponseAllOfPhoto.js';
import {
    UserBaseResponseAllOfPhotoFromJSON,
    UserBaseResponseAllOfPhotoFromJSONTyped,
    UserBaseResponseAllOfPhotoToJSON,
    UserBaseResponseAllOfPhotoToJSONTyped,
} from './UserBaseResponseAllOfPhoto.js';

/**
 * 
 * @export
 * @interface UserBaseResponse
 */
export interface UserBaseResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof UserBaseResponse
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof UserBaseResponse
     */
    readonly resourceType?: string;
    /**
     * *Read-only except when same user as requester*. The user's name.
     * @type {string}
     * @memberof UserBaseResponse
     */
    name?: string;
    /**
     * The user's email address.
     * @type {string}
     * @memberof UserBaseResponse
     */
    readonly email?: string;
    /**
     * 
     * @type {UserBaseResponseAllOfPhoto}
     * @memberof UserBaseResponse
     */
    photo?: UserBaseResponseAllOfPhoto | null;
}

/**
 * Check if a given object implements the UserBaseResponse interface.
 */
export function instanceOfUserBaseResponse(value: object): value is UserBaseResponse {
    return true;
}

export function UserBaseResponseFromJSON(json: any): UserBaseResponse {
    return UserBaseResponseFromJSONTyped(json, false);
}

export function UserBaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserBaseResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
        'photo': json['photo'] == null ? undefined : UserBaseResponseAllOfPhotoFromJSON(json['photo']),
    };
}

export function UserBaseResponseToJSON(json: any): UserBaseResponse {
    return UserBaseResponseToJSONTyped(json, false);
}

export function UserBaseResponseToJSONTyped(value?: Omit<UserBaseResponse, 'gid'|'resource_type'|'email'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'photo': UserBaseResponseAllOfPhotoToJSON(value['photo']),
    };
}

