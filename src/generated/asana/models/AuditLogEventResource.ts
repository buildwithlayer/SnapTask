/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * The primary object that was affected by this event.
 * @export
 * @interface AuditLogEventResource
 */
export interface AuditLogEventResource {
    /**
     * The type of resource.
     * @type {string}
     * @memberof AuditLogEventResource
     */
    resourceType?: string;
    /**
     * The subtype of resource. Most resources will not have a subtype.
     * @type {string}
     * @memberof AuditLogEventResource
     */
    resourceSubtype?: string;
    /**
     * Globally unique identifier of the resource.
     * @type {string}
     * @memberof AuditLogEventResource
     */
    gid?: string;
    /**
     * The name of the resource.
     * @type {string}
     * @memberof AuditLogEventResource
     */
    name?: string | null;
    /**
     * The email of the resource, if applicable.
     * @type {string}
     * @memberof AuditLogEventResource
     */
    email?: string;
}

/**
 * Check if a given object implements the AuditLogEventResource interface.
 */
export function instanceOfAuditLogEventResource(value: object): value is AuditLogEventResource {
    return true;
}

export function AuditLogEventResourceFromJSON(json: any): AuditLogEventResource {
    return AuditLogEventResourceFromJSONTyped(json, false);
}

export function AuditLogEventResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditLogEventResource {
    if (json == null) {
        return json;
    }
    return {
        
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'gid': json['gid'] == null ? undefined : json['gid'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
    };
}

export function AuditLogEventResourceToJSON(json: any): AuditLogEventResource {
    return AuditLogEventResourceToJSONTyped(json, false);
}

export function AuditLogEventResourceToJSONTyped(value?: AuditLogEventResource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource_type': value['resourceType'],
        'resource_subtype': value['resourceSubtype'],
        'gid': value['gid'],
        'name': value['name'],
        'email': value['email'],
    };
}

