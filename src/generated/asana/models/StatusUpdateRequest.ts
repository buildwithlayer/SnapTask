/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface StatusUpdateRequest
 */
export interface StatusUpdateRequest {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    readonly resourceType?: string;
    /**
     * The title of the status update.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    title?: string;
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * The `resource_subtype`s for `status` objects represent the type of their parent.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    readonly resourceSubtype?: StatusUpdateRequestResourceSubtypeEnum;
    /**
     * The text content of the status update.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    text: string;
    /**
     * [Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    htmlText?: string;
    /**
     * The type associated with the status update. This represents the current state of the object this object is on.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    statusType: StatusUpdateRequestStatusTypeEnum;
    /**
     * The id of parent to send this status update to. This can be a project, goal or portfolio.
     * @type {string}
     * @memberof StatusUpdateRequest
     */
    parent: string;
}


/**
 * @export
 */
export const StatusUpdateRequestResourceSubtypeEnum = {
    ProjectStatusUpdate: 'project_status_update',
    PortfolioStatusUpdate: 'portfolio_status_update',
    GoalStatusUpdate: 'goal_status_update'
} as const;
export type StatusUpdateRequestResourceSubtypeEnum = typeof StatusUpdateRequestResourceSubtypeEnum[keyof typeof StatusUpdateRequestResourceSubtypeEnum];

/**
 * @export
 */
export const StatusUpdateRequestStatusTypeEnum = {
    OnTrack: 'on_track',
    AtRisk: 'at_risk',
    OffTrack: 'off_track',
    OnHold: 'on_hold',
    Complete: 'complete',
    Achieved: 'achieved',
    Partial: 'partial',
    Missed: 'missed',
    Dropped: 'dropped'
} as const;
export type StatusUpdateRequestStatusTypeEnum = typeof StatusUpdateRequestStatusTypeEnum[keyof typeof StatusUpdateRequestStatusTypeEnum];


/**
 * Check if a given object implements the StatusUpdateRequest interface.
 */
export function instanceOfStatusUpdateRequest(value: object): value is StatusUpdateRequest {
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('statusType' in value) || value['statusType'] === undefined) return false;
    if (!('parent' in value) || value['parent'] === undefined) return false;
    return true;
}

export function StatusUpdateRequestFromJSON(json: any): StatusUpdateRequest {
    return StatusUpdateRequestFromJSONTyped(json, false);
}

export function StatusUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatusUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'title': json['title'] == null ? undefined : json['title'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'text': json['text'],
        'htmlText': json['html_text'] == null ? undefined : json['html_text'],
        'statusType': json['status_type'],
        'parent': json['parent'],
    };
}

export function StatusUpdateRequestToJSON(json: any): StatusUpdateRequest {
    return StatusUpdateRequestToJSONTyped(json, false);
}

export function StatusUpdateRequestToJSONTyped(value?: Omit<StatusUpdateRequest, 'gid'|'resource_type'|'resource_subtype'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'text': value['text'],
        'html_text': value['htmlText'],
        'status_type': value['statusType'],
        'parent': value['parent'],
    };
}

