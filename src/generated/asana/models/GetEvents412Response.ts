/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { GetEvents412ResponseErrorsInner } from './GetEvents412ResponseErrorsInner.js';
import {
    GetEvents412ResponseErrorsInnerFromJSON,
    GetEvents412ResponseErrorsInnerFromJSONTyped,
    GetEvents412ResponseErrorsInnerToJSON,
    GetEvents412ResponseErrorsInnerToJSONTyped,
} from './GetEvents412ResponseErrorsInner.js';

/**
 * 
 * @export
 * @interface GetEvents412Response
 */
export interface GetEvents412Response {
    /**
     * 
     * @type {Array<GetEvents412ResponseErrorsInner>}
     * @memberof GetEvents412Response
     */
    errors?: Array<GetEvents412ResponseErrorsInner>;
    /**
     * A sync token to be used with the next call to the /events endpoint.
     * @type {string}
     * @memberof GetEvents412Response
     */
    readonly sync?: string;
}

/**
 * Check if a given object implements the GetEvents412Response interface.
 */
export function instanceOfGetEvents412Response(value: object): value is GetEvents412Response {
    return true;
}

export function GetEvents412ResponseFromJSON(json: any): GetEvents412Response {
    return GetEvents412ResponseFromJSONTyped(json, false);
}

export function GetEvents412ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetEvents412Response {
    if (json == null) {
        return json;
    }
    return {
        
        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(GetEvents412ResponseErrorsInnerFromJSON)),
        'sync': json['sync'] == null ? undefined : json['sync'],
    };
}

export function GetEvents412ResponseToJSON(json: any): GetEvents412Response {
    return GetEvents412ResponseToJSONTyped(json, false);
}

export function GetEvents412ResponseToJSONTyped(value?: Omit<GetEvents412Response, 'sync'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(GetEvents412ResponseErrorsInnerToJSON)),
    };
}

