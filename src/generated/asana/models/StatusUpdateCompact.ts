/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.
 * @export
 * @interface StatusUpdateCompact
 */
export interface StatusUpdateCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof StatusUpdateCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof StatusUpdateCompact
     */
    readonly resourceType?: string;
    /**
     * The title of the status update.
     * @type {string}
     * @memberof StatusUpdateCompact
     */
    title?: string;
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * The `resource_subtype`s for `status` objects represent the type of their parent.
     * @type {string}
     * @memberof StatusUpdateCompact
     */
    readonly resourceSubtype?: StatusUpdateCompactResourceSubtypeEnum;
}


/**
 * @export
 */
export const StatusUpdateCompactResourceSubtypeEnum = {
    ProjectStatusUpdate: 'project_status_update',
    PortfolioStatusUpdate: 'portfolio_status_update',
    GoalStatusUpdate: 'goal_status_update'
} as const;
export type StatusUpdateCompactResourceSubtypeEnum = typeof StatusUpdateCompactResourceSubtypeEnum[keyof typeof StatusUpdateCompactResourceSubtypeEnum];


/**
 * Check if a given object implements the StatusUpdateCompact interface.
 */
export function instanceOfStatusUpdateCompact(value: object): value is StatusUpdateCompact {
    return true;
}

export function StatusUpdateCompactFromJSON(json: any): StatusUpdateCompact {
    return StatusUpdateCompactFromJSONTyped(json, false);
}

export function StatusUpdateCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatusUpdateCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'title': json['title'] == null ? undefined : json['title'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
    };
}

export function StatusUpdateCompactToJSON(json: any): StatusUpdateCompact {
    return StatusUpdateCompactToJSONTyped(json, false);
}

export function StatusUpdateCompactToJSONTyped(value?: Omit<StatusUpdateCompact, 'gid'|'resource_type'|'resource_subtype'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
    };
}

