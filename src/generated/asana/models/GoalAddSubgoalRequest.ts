/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GoalAddSubgoalRequest
 */
export interface GoalAddSubgoalRequest {
    /**
     * The goal gid to add as subgoal to a parent goal
     * @type {string}
     * @memberof GoalAddSubgoalRequest
     */
    subgoal: string;
    /**
     * An id of a subgoal of this parent goal. The new subgoal will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.
     * @type {string}
     * @memberof GoalAddSubgoalRequest
     */
    insertBefore?: string;
    /**
     * An id of a subgoal of this parent goal. The new subgoal will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.
     * @type {string}
     * @memberof GoalAddSubgoalRequest
     */
    insertAfter?: string;
}

/**
 * Check if a given object implements the GoalAddSubgoalRequest interface.
 */
export function instanceOfGoalAddSubgoalRequest(value: object): value is GoalAddSubgoalRequest {
    if (!('subgoal' in value) || value['subgoal'] === undefined) return false;
    return true;
}

export function GoalAddSubgoalRequestFromJSON(json: any): GoalAddSubgoalRequest {
    return GoalAddSubgoalRequestFromJSONTyped(json, false);
}

export function GoalAddSubgoalRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GoalAddSubgoalRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'subgoal': json['subgoal'],
        'insertBefore': json['insert_before'] == null ? undefined : json['insert_before'],
        'insertAfter': json['insert_after'] == null ? undefined : json['insert_after'],
    };
}

export function GoalAddSubgoalRequestToJSON(json: any): GoalAddSubgoalRequest {
    return GoalAddSubgoalRequestToJSONTyped(json, false);
}

export function GoalAddSubgoalRequestToJSONTyped(value?: GoalAddSubgoalRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subgoal': value['subgoal'],
        'insert_before': value['insertBefore'],
        'insert_after': value['insertAfter'],
    };
}

