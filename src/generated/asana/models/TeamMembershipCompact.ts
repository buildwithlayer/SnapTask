/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TeamCompact } from './TeamCompact.js';
import {
    TeamCompactFromJSON,
    TeamCompactFromJSONTyped,
    TeamCompactToJSON,
    TeamCompactToJSONTyped,
} from './TeamCompact.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';

/**
 * This object represents a user's connection to a team.
 * @export
 * @interface TeamMembershipCompact
 */
export interface TeamMembershipCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof TeamMembershipCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof TeamMembershipCompact
     */
    readonly resourceType?: string;
    /**
     * 
     * @type {UserCompact}
     * @memberof TeamMembershipCompact
     */
    user?: UserCompact;
    /**
     * 
     * @type {TeamCompact}
     * @memberof TeamMembershipCompact
     */
    team?: TeamCompact;
    /**
     * Describes if the user is a guest in the team.
     * @type {boolean}
     * @memberof TeamMembershipCompact
     */
    isGuest?: boolean;
    /**
     * Describes if the user has limited access to the team.
     * @type {boolean}
     * @memberof TeamMembershipCompact
     */
    readonly isLimitedAccess?: boolean;
    /**
     * Describes if the user is a team admin.
     * @type {boolean}
     * @memberof TeamMembershipCompact
     */
    isAdmin?: boolean;
}

/**
 * Check if a given object implements the TeamMembershipCompact interface.
 */
export function instanceOfTeamMembershipCompact(value: object): value is TeamMembershipCompact {
    return true;
}

export function TeamMembershipCompactFromJSON(json: any): TeamMembershipCompact {
    return TeamMembershipCompactFromJSONTyped(json, false);
}

export function TeamMembershipCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamMembershipCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'user': json['user'] == null ? undefined : UserCompactFromJSON(json['user']),
        'team': json['team'] == null ? undefined : TeamCompactFromJSON(json['team']),
        'isGuest': json['is_guest'] == null ? undefined : json['is_guest'],
        'isLimitedAccess': json['is_limited_access'] == null ? undefined : json['is_limited_access'],
        'isAdmin': json['is_admin'] == null ? undefined : json['is_admin'],
    };
}

export function TeamMembershipCompactToJSON(json: any): TeamMembershipCompact {
    return TeamMembershipCompactToJSONTyped(json, false);
}

export function TeamMembershipCompactToJSONTyped(value?: Omit<TeamMembershipCompact, 'gid'|'resource_type'|'is_limited_access'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': UserCompactToJSON(value['user']),
        'team': TeamCompactToJSON(value['team']),
        'is_guest': value['isGuest'],
        'is_admin': value['isAdmin'],
    };
}

