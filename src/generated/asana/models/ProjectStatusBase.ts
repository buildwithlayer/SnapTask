/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface ProjectStatusBase
 */
export interface ProjectStatusBase {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof ProjectStatusBase
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof ProjectStatusBase
     */
    readonly resourceType?: string;
    /**
     * The title of the project status update.
     * @type {string}
     * @memberof ProjectStatusBase
     */
    title?: string;
    /**
     * The text content of the status update.
     * @type {string}
     * @memberof ProjectStatusBase
     */
    text?: string;
    /**
     * [Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.
     * @type {string}
     * @memberof ProjectStatusBase
     */
    htmlText?: string;
    /**
     * The color associated with the status update.
     * @type {string}
     * @memberof ProjectStatusBase
     */
    color?: ProjectStatusBaseColorEnum;
}


/**
 * @export
 */
export const ProjectStatusBaseColorEnum = {
    Green: 'green',
    Yellow: 'yellow',
    Red: 'red',
    Blue: 'blue',
    Complete: 'complete'
} as const;
export type ProjectStatusBaseColorEnum = typeof ProjectStatusBaseColorEnum[keyof typeof ProjectStatusBaseColorEnum];


/**
 * Check if a given object implements the ProjectStatusBase interface.
 */
export function instanceOfProjectStatusBase(value: object): value is ProjectStatusBase {
    return true;
}

export function ProjectStatusBaseFromJSON(json: any): ProjectStatusBase {
    return ProjectStatusBaseFromJSONTyped(json, false);
}

export function ProjectStatusBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectStatusBase {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'title': json['title'] == null ? undefined : json['title'],
        'text': json['text'] == null ? undefined : json['text'],
        'htmlText': json['html_text'] == null ? undefined : json['html_text'],
        'color': json['color'] == null ? undefined : json['color'],
    };
}

export function ProjectStatusBaseToJSON(json: any): ProjectStatusBase {
    return ProjectStatusBaseToJSONTyped(json, false);
}

export function ProjectStatusBaseToJSONTyped(value?: Omit<ProjectStatusBase, 'gid'|'resource_type'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'text': value['text'],
        'html_text': value['htmlText'],
        'color': value['color'],
    };
}

