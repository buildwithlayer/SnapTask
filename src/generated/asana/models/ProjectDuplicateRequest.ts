/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ProjectDuplicateRequestScheduleDates } from './ProjectDuplicateRequestScheduleDates.js';
import {
    ProjectDuplicateRequestScheduleDatesFromJSON,
    ProjectDuplicateRequestScheduleDatesFromJSONTyped,
    ProjectDuplicateRequestScheduleDatesToJSON,
    ProjectDuplicateRequestScheduleDatesToJSONTyped,
} from './ProjectDuplicateRequestScheduleDates.js';

/**
 * 
 * @export
 * @interface ProjectDuplicateRequest
 */
export interface ProjectDuplicateRequest {
    /**
     * The name of the new project.
     * @type {string}
     * @memberof ProjectDuplicateRequest
     */
    name: string;
    /**
     * Sets the team of the new project. If team is not defined, the new project will be in the same team as the the original project.
     * @type {string}
     * @memberof ProjectDuplicateRequest
     */
    team?: string;
    /**
     * A comma-separated list of elements that will be duplicated to the new project. Tasks are always included.
     * ##### Fields
     * - allocations
     * - forms
     * - members
     * - notes
     * - task_assignee
     * - task_attachments
     * - task_dates
     * - task_dependencies
     * - task_followers
     * - task_notes
     * - task_projects
     * - task_subtasks
     * - task_tags
     * @type {string}
     * @memberof ProjectDuplicateRequest
     */
    include?: string;
    /**
     * 
     * @type {ProjectDuplicateRequestScheduleDates}
     * @memberof ProjectDuplicateRequest
     */
    scheduleDates?: ProjectDuplicateRequestScheduleDates;
}

/**
 * Check if a given object implements the ProjectDuplicateRequest interface.
 */
export function instanceOfProjectDuplicateRequest(value: object): value is ProjectDuplicateRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ProjectDuplicateRequestFromJSON(json: any): ProjectDuplicateRequest {
    return ProjectDuplicateRequestFromJSONTyped(json, false);
}

export function ProjectDuplicateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectDuplicateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'team': json['team'] == null ? undefined : json['team'],
        'include': json['include'] == null ? undefined : json['include'],
        'scheduleDates': json['schedule_dates'] == null ? undefined : ProjectDuplicateRequestScheduleDatesFromJSON(json['schedule_dates']),
    };
}

export function ProjectDuplicateRequestToJSON(json: any): ProjectDuplicateRequest {
    return ProjectDuplicateRequestToJSONTyped(json, false);
}

export function ProjectDuplicateRequestToJSONTyped(value?: ProjectDuplicateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'team': value['team'],
        'include': value['include'],
        'schedule_dates': ProjectDuplicateRequestScheduleDatesToJSON(value['scheduleDates']),
    };
}

