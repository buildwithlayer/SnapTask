/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CustomFieldCompactEnumValue } from './CustomFieldCompactEnumValue.js';
import {
    CustomFieldCompactEnumValueFromJSON,
    CustomFieldCompactEnumValueFromJSONTyped,
    CustomFieldCompactEnumValueToJSON,
    CustomFieldCompactEnumValueToJSONTyped,
} from './CustomFieldCompactEnumValue.js';
import type { EnumOption } from './EnumOption.js';
import {
    EnumOptionFromJSON,
    EnumOptionFromJSONTyped,
    EnumOptionToJSON,
    EnumOptionToJSONTyped,
} from './EnumOption.js';
import type { CustomFieldCompactDateValue } from './CustomFieldCompactDateValue.js';
import {
    CustomFieldCompactDateValueFromJSON,
    CustomFieldCompactDateValueFromJSONTyped,
    CustomFieldCompactDateValueToJSON,
    CustomFieldCompactDateValueToJSONTyped,
} from './CustomFieldCompactDateValue.js';

/**
 * 
 * @export
 * @interface CustomFieldRequest
 */
export interface CustomFieldRequest {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    readonly resourceType?: string;
    /**
     * The name of the custom field.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    name?: string;
    /**
     * *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.
     * 
     * @type {string}
     * @memberof CustomFieldRequest
     */
    readonly type?: CustomFieldRequestTypeEnum;
    /**
     * *Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).
     * @type {Array<EnumOption>}
     * @memberof CustomFieldRequest
     */
    enumOptions?: Array<EnumOption>;
    /**
     * *Conditional*. Determines if the custom field is enabled or not.
     * @type {boolean}
     * @memberof CustomFieldRequest
     */
    readonly enabled?: boolean;
    /**
     * This field tells the type of the custom field.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    readonly representationType?: CustomFieldRequestRepresentationTypeEnum;
    /**
     * This field is the unique custom ID string for the custom field.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    idPrefix?: string | null;
    /**
     * *Conditional*. This flag describes whether a custom field is a formula custom field.
     * @type {boolean}
     * @memberof CustomFieldRequest
     */
    isFormulaField?: boolean;
    /**
     * 
     * @type {CustomFieldCompactDateValue}
     * @memberof CustomFieldRequest
     */
    dateValue?: CustomFieldCompactDateValue | null;
    /**
     * 
     * @type {CustomFieldCompactEnumValue}
     * @memberof CustomFieldRequest
     */
    enumValue?: CustomFieldCompactEnumValue;
    /**
     * *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.
     * @type {Array<EnumOption>}
     * @memberof CustomFieldRequest
     */
    multiEnumValues?: Array<EnumOption>;
    /**
     * *Conditional*. This number is the value of a `number` custom field.
     * @type {number}
     * @memberof CustomFieldRequest
     */
    numberValue?: number | null;
    /**
     * *Conditional*. This string is the value of a `text` custom field.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    textValue?: string | null;
    /**
     * A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    readonly displayValue?: string | null;
    /**
     * [Opt In](/docs/inputoutput-options). The description of the custom field.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    description?: string;
    /**
     * Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
     * For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
     * The identifier format will always have a precision of 0.
     * @type {number}
     * @memberof CustomFieldRequest
     */
    precision?: number;
    /**
     * The format of this custom field.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    format?: CustomFieldRequestFormatEnum;
    /**
     * ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    currencyCode?: string | null;
    /**
     * This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    customLabel?: string | null;
    /**
     * Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    customLabelPosition?: CustomFieldRequestCustomLabelPositionEnum | null;
    /**
     * This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.
     * @type {boolean}
     * @memberof CustomFieldRequest
     */
    readonly isGlobalToWorkspace?: boolean;
    /**
     * *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
     * @type {boolean}
     * @memberof CustomFieldRequest
     */
    hasNotificationsEnabled?: boolean;
    /**
     * *Conditional*. A unique identifier to associate this field with the template source of truth.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    readonly asanaCreatedField?: CustomFieldRequestAsanaCreatedFieldEnum | null;
    /**
     * *Create-Only* The workspace to create a custom field in.
     * @type {string}
     * @memberof CustomFieldRequest
     */
    workspace: string;
    /**
     * *Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`.
     * @type {boolean}
     * @memberof CustomFieldRequest
     */
    ownedByApp?: boolean;
    /**
     * *Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.
     * @type {Array<string>}
     * @memberof CustomFieldRequest
     */
    peopleValue?: Array<string>;
}


/**
 * @export
 */
export const CustomFieldRequestTypeEnum = {
    Text: 'text',
    Enum: 'enum',
    MultiEnum: 'multi_enum',
    Number: 'number',
    Date: 'date',
    People: 'people'
} as const;
export type CustomFieldRequestTypeEnum = typeof CustomFieldRequestTypeEnum[keyof typeof CustomFieldRequestTypeEnum];

/**
 * @export
 */
export const CustomFieldRequestRepresentationTypeEnum = {
    Text: 'text',
    Enum: 'enum',
    MultiEnum: 'multi_enum',
    Number: 'number',
    Date: 'date',
    People: 'people',
    Formula: 'formula',
    CustomId: 'custom_id'
} as const;
export type CustomFieldRequestRepresentationTypeEnum = typeof CustomFieldRequestRepresentationTypeEnum[keyof typeof CustomFieldRequestRepresentationTypeEnum];

/**
 * @export
 */
export const CustomFieldRequestFormatEnum = {
    Currency: 'currency',
    Identifier: 'identifier',
    Percentage: 'percentage',
    Custom: 'custom',
    Duration: 'duration',
    None: 'none'
} as const;
export type CustomFieldRequestFormatEnum = typeof CustomFieldRequestFormatEnum[keyof typeof CustomFieldRequestFormatEnum];

/**
 * @export
 */
export const CustomFieldRequestCustomLabelPositionEnum = {
    Prefix: 'prefix',
    Suffix: 'suffix'
} as const;
export type CustomFieldRequestCustomLabelPositionEnum = typeof CustomFieldRequestCustomLabelPositionEnum[keyof typeof CustomFieldRequestCustomLabelPositionEnum];

/**
 * @export
 */
export const CustomFieldRequestAsanaCreatedFieldEnum = {
    AVRequirements: 'a_v_requirements',
    AccountName: 'account_name',
    Actionable: 'actionable',
    AlignShippingLink: 'align_shipping_link',
    AlignStatus: 'align_status',
    AllottedTime: 'allotted_time',
    Appointment: 'appointment',
    ApprovalStage: 'approval_stage',
    Approved: 'approved',
    ArticleSeries: 'article_series',
    BoardCommittee: 'board_committee',
    Browser: 'browser',
    CampaignAudience: 'campaign_audience',
    CampaignProjectStatus: 'campaign_project_status',
    CampaignRegions: 'campaign_regions',
    ChannelPrimary: 'channel_primary',
    ClientTopicType: 'client_topic_type',
    CompleteBy: 'complete_by',
    Contact: 'contact',
    ContactEmailAddress: 'contact_email_address',
    ContentChannels: 'content_channels',
    ContentChannelsNeeded: 'content_channels_needed',
    ContentStage: 'content_stage',
    ContentType: 'content_type',
    Contract: 'contract',
    ContractStatus: 'contract_status',
    Cost: 'cost',
    CreationStage: 'creation_stage',
    CreativeChannel: 'creative_channel',
    CreativeNeeded: 'creative_needed',
    CreativeNeeds: 'creative_needs',
    DataSensitivity: 'data_sensitivity',
    DealSize: 'deal_size',
    DeliveryAppt: 'delivery_appt',
    DeliveryApptDate: 'delivery_appt_date',
    Department: 'department',
    DepartmentResponsible: 'department_responsible',
    DesignRequestNeeded: 'design_request_needed',
    DesignRequestType: 'design_request_type',
    DiscussionCategory: 'discussion_category',
    DoThisTask: 'do_this_task',
    EditorialContentStatus: 'editorial_content_status',
    EditorialContentTag: 'editorial_content_tag',
    EditorialContentType: 'editorial_content_type',
    Effort: 'effort',
    EffortLevel: 'effort_level',
    EstCompletionDate: 'est_completion_date',
    EstimatedTime: 'estimated_time',
    EstimatedValue: 'estimated_value',
    ExpectedCost: 'expected_cost',
    ExternalStepsNeeded: 'external_steps_needed',
    FavoriteIdea: 'favorite_idea',
    FeedbackType: 'feedback_type',
    Financial: 'financial',
    FundingAmount: 'funding_amount',
    GrantApplicationProcess: 'grant_application_process',
    HiringCandidateStatus: 'hiring_candidate_status',
    IdeaStatus: 'idea_status',
    IdsLink: 'ids_link',
    IdsPatientLink: 'ids_patient_link',
    ImplementationStage: 'implementation_stage',
    Insurance: 'insurance',
    InterviewArea: 'interview_area',
    InterviewQuestionScore: 'interview_question_score',
    IteroScanLink: 'itero_scan_link',
    JobSAppliedTo: 'job_s_applied_to',
    Lab: 'lab',
    LaunchStatus: 'launch_status',
    LeadStatus: 'lead_status',
    LocalizationLanguage: 'localization_language',
    LocalizationMarketTeam: 'localization_market_team',
    LocalizationStatus: 'localization_status',
    MeetingMinutes: 'meeting_minutes',
    MeetingNeeded: 'meeting_needed',
    Minutes: 'minutes',
    Mrr: 'mrr',
    MustLocalize: 'must_localize',
    NameOfFoundation: 'name_of_foundation',
    NeedToFollowUp: 'need_to_follow_up',
    NextAppointment: 'next_appointment',
    NextStepsSales: 'next_steps_sales',
    NumPeople: 'num_people',
    NumberOfUserReports: 'number_of_user_reports',
    OfficeLocation: 'office_location',
    OnboardingActivity: 'onboarding_activity',
    Owner: 'owner',
    ParticipantsNeeded: 'participants_needed',
    PatientDateOfBirth: 'patient_date_of_birth',
    PatientEmail: 'patient_email',
    PatientPhone: 'patient_phone',
    PatientStatus: 'patient_status',
    PhoneNumber: 'phone_number',
    PlanningCategory: 'planning_category',
    PointOfContact: 'point_of_contact',
    Position: 'position',
    PostFormat: 'post_format',
    Prescription: 'prescription',
    Priority: 'priority',
    PriorityLevel: 'priority_level',
    Product: 'product',
    ProductStage: 'product_stage',
    Progress: 'progress',
    ProjectSize: 'project_size',
    ProjectStatus: 'project_status',
    ProposedBudget: 'proposed_budget',
    PublishStatus: 'publish_status',
    ReasonForScan: 'reason_for_scan',
    Referral: 'referral',
    RequestType: 'request_type',
    ResearchStatus: 'research_status',
    ResponsibleDepartment: 'responsible_department',
    ResponsibleTeam: 'responsible_team',
    RiskAssessmentStatus: 'risk_assessment_status',
    RoomName: 'room_name',
    SalesCounterpart: 'sales_counterpart',
    Sentiment: 'sentiment',
    ShippingLink: 'shipping_link',
    SocialChannels: 'social_channels',
    Stage: 'stage',
    Status: 'status',
    StatusDesign: 'status_design',
    StatusOfInitiative: 'status_of_initiative',
    SystemSetup: 'system_setup',
    TaskProgress: 'task_progress',
    Team: 'team',
    TeamMarketing: 'team_marketing',
    TeamResponsible: 'team_responsible',
    TimeItTakesToCompleteTasks: 'time_it_takes_to_complete_tasks',
    Timeframe: 'timeframe',
    TreatmentType: 'treatment_type',
    TypeWorkRequestsIt: 'type_work_requests_it',
    UseAgency: 'use_agency',
    UserName: 'user_name',
    VendorCategory: 'vendor_category',
    VendorType: 'vendor_type',
    WordCount: 'word_count'
} as const;
export type CustomFieldRequestAsanaCreatedFieldEnum = typeof CustomFieldRequestAsanaCreatedFieldEnum[keyof typeof CustomFieldRequestAsanaCreatedFieldEnum];


/**
 * Check if a given object implements the CustomFieldRequest interface.
 */
export function instanceOfCustomFieldRequest(value: object): value is CustomFieldRequest {
    if (!('workspace' in value) || value['workspace'] === undefined) return false;
    return true;
}

export function CustomFieldRequestFromJSON(json: any): CustomFieldRequest {
    return CustomFieldRequestFromJSONTyped(json, false);
}

export function CustomFieldRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomFieldRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'enumOptions': json['enum_options'] == null ? undefined : ((json['enum_options'] as Array<any>).map(EnumOptionFromJSON)),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'representationType': json['representation_type'] == null ? undefined : json['representation_type'],
        'idPrefix': json['id_prefix'] == null ? undefined : json['id_prefix'],
        'isFormulaField': json['is_formula_field'] == null ? undefined : json['is_formula_field'],
        'dateValue': json['date_value'] == null ? undefined : CustomFieldCompactDateValueFromJSON(json['date_value']),
        'enumValue': json['enum_value'] == null ? undefined : CustomFieldCompactEnumValueFromJSON(json['enum_value']),
        'multiEnumValues': json['multi_enum_values'] == null ? undefined : ((json['multi_enum_values'] as Array<any>).map(EnumOptionFromJSON)),
        'numberValue': json['number_value'] == null ? undefined : json['number_value'],
        'textValue': json['text_value'] == null ? undefined : json['text_value'],
        'displayValue': json['display_value'] == null ? undefined : json['display_value'],
        'description': json['description'] == null ? undefined : json['description'],
        'precision': json['precision'] == null ? undefined : json['precision'],
        'format': json['format'] == null ? undefined : json['format'],
        'currencyCode': json['currency_code'] == null ? undefined : json['currency_code'],
        'customLabel': json['custom_label'] == null ? undefined : json['custom_label'],
        'customLabelPosition': json['custom_label_position'] == null ? undefined : json['custom_label_position'],
        'isGlobalToWorkspace': json['is_global_to_workspace'] == null ? undefined : json['is_global_to_workspace'],
        'hasNotificationsEnabled': json['has_notifications_enabled'] == null ? undefined : json['has_notifications_enabled'],
        'asanaCreatedField': json['asana_created_field'] == null ? undefined : json['asana_created_field'],
        'workspace': json['workspace'],
        'ownedByApp': json['owned_by_app'] == null ? undefined : json['owned_by_app'],
        'peopleValue': json['people_value'] == null ? undefined : json['people_value'],
    };
}

export function CustomFieldRequestToJSON(json: any): CustomFieldRequest {
    return CustomFieldRequestToJSONTyped(json, false);
}

export function CustomFieldRequestToJSONTyped(value?: Omit<CustomFieldRequest, 'gid'|'resource_type'|'type'|'enabled'|'representation_type'|'display_value'|'is_global_to_workspace'|'asana_created_field'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'enum_options': value['enumOptions'] == null ? undefined : ((value['enumOptions'] as Array<any>).map(EnumOptionToJSON)),
        'id_prefix': value['idPrefix'],
        'is_formula_field': value['isFormulaField'],
        'date_value': CustomFieldCompactDateValueToJSON(value['dateValue']),
        'enum_value': CustomFieldCompactEnumValueToJSON(value['enumValue']),
        'multi_enum_values': value['multiEnumValues'] == null ? undefined : ((value['multiEnumValues'] as Array<any>).map(EnumOptionToJSON)),
        'number_value': value['numberValue'],
        'text_value': value['textValue'],
        'description': value['description'],
        'precision': value['precision'],
        'format': value['format'],
        'currency_code': value['currencyCode'],
        'custom_label': value['customLabel'],
        'custom_label_position': value['customLabelPosition'],
        'has_notifications_enabled': value['hasNotificationsEnabled'],
        'workspace': value['workspace'],
        'owned_by_app': value['ownedByApp'],
        'people_value': value['peopleValue'],
    };
}

