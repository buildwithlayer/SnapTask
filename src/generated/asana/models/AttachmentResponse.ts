/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { AttachmentResponseAllOfParent } from './AttachmentResponseAllOfParent.js';
import {
    AttachmentResponseAllOfParentFromJSON,
    AttachmentResponseAllOfParentFromJSONTyped,
    AttachmentResponseAllOfParentToJSON,
    AttachmentResponseAllOfParentToJSONTyped,
} from './AttachmentResponseAllOfParent.js';

/**
 * 
 * @export
 * @interface AttachmentResponse
 */
export interface AttachmentResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly resourceType?: string;
    /**
     * The name of the file.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly name?: string;
    /**
     * The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `onedrive`, `box`, `vimeo`, and `external`.
     * @type {string}
     * @memberof AttachmentResponse
     */
    resourceSubtype?: string;
    /**
     * The time at which this resource was created.
     * @type {Date}
     * @memberof AttachmentResponse
     */
    readonly createdAt?: Date;
    /**
     * The URL containing the content of the attachment.
     * *Note:* May be null if the attachment is hosted by [Box](https://www.box.com/) and will be null if the attachment is a Video Message hosted by [Vimeo](https://vimeo.com/). If present, this URL may only be valid for two minutes from the time of retrieval. You should avoid persisting this URL somewhere and just refresh it on demand to ensure you do not keep stale URLs.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly downloadUrl?: string | null;
    /**
     * A stable URL for accessing the attachment through the Asana web application. This URL redirects to the file download location (e.g., an S3 link) if the user is authenticated and authorized to view the parent object (e.g., a task). Unauthorized users will receive a `403 Forbidden` response. This link is persistent and does not expire, but requires an active session to resolve.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly permanentUrl?: string | null;
    /**
     * The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `box`, and `vimeo`.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly host?: string;
    /**
     * 
     * @type {AttachmentResponseAllOfParent}
     * @memberof AttachmentResponse
     */
    parent?: AttachmentResponseAllOfParent;
    /**
     * The size of the attachment in bytes. Only present when the `resource_subtype` is `asana`.
     * @type {number}
     * @memberof AttachmentResponse
     */
    readonly size?: number;
    /**
     * The URL where the attachment can be viewed, which may be friendlier to users in a browser than just directing them to a raw file. May be null if no view URL exists for the service.
     * @type {string}
     * @memberof AttachmentResponse
     */
    readonly viewUrl?: string | null;
    /**
     * Whether the attachment is connected to the app making the request for the purposes of showing an app components widget. Only present when the `resource_subtype` is `external` or `gdrive`.
     * @type {boolean}
     * @memberof AttachmentResponse
     */
    readonly connectedToApp?: boolean;
}

/**
 * Check if a given object implements the AttachmentResponse interface.
 */
export function instanceOfAttachmentResponse(value: object): value is AttachmentResponse {
    return true;
}

export function AttachmentResponseFromJSON(json: any): AttachmentResponse {
    return AttachmentResponseFromJSONTyped(json, false);
}

export function AttachmentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttachmentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'downloadUrl': json['download_url'] == null ? undefined : json['download_url'],
        'permanentUrl': json['permanent_url'] == null ? undefined : json['permanent_url'],
        'host': json['host'] == null ? undefined : json['host'],
        'parent': json['parent'] == null ? undefined : AttachmentResponseAllOfParentFromJSON(json['parent']),
        'size': json['size'] == null ? undefined : json['size'],
        'viewUrl': json['view_url'] == null ? undefined : json['view_url'],
        'connectedToApp': json['connected_to_app'] == null ? undefined : json['connected_to_app'],
    };
}

export function AttachmentResponseToJSON(json: any): AttachmentResponse {
    return AttachmentResponseToJSONTyped(json, false);
}

export function AttachmentResponseToJSONTyped(value?: Omit<AttachmentResponse, 'gid'|'resource_type'|'name'|'created_at'|'download_url'|'permanent_url'|'host'|'size'|'view_url'|'connected_to_app'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource_subtype': value['resourceSubtype'],
        'parent': AttachmentResponseAllOfParentToJSON(value['parent']),
    };
}

