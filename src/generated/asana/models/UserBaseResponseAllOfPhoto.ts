/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * A map of the user's profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images are in PNG format, except for 1024 (which is in JPEG format).
 * @export
 * @interface UserBaseResponseAllOfPhoto
 */
export interface UserBaseResponseAllOfPhoto {
    /**
     * PNG image of the user at 21x21 pixels.
     * @type {string}
     * @memberof UserBaseResponseAllOfPhoto
     */
    image21x21?: string;
    /**
     * PNG image of the user at 27x27 pixels.
     * @type {string}
     * @memberof UserBaseResponseAllOfPhoto
     */
    image27x27?: string;
    /**
     * PNG image of the user at 36x36 pixels.
     * @type {string}
     * @memberof UserBaseResponseAllOfPhoto
     */
    image36x36?: string;
    /**
     * PNG image of the user at 60x60 pixels.
     * @type {string}
     * @memberof UserBaseResponseAllOfPhoto
     */
    image60x60?: string;
    /**
     * PNG image of the user at 128x128 pixels.
     * @type {string}
     * @memberof UserBaseResponseAllOfPhoto
     */
    image128x128?: string;
    /**
     * JPEG image of the user at 1024x1024 pixels.
     * @type {string}
     * @memberof UserBaseResponseAllOfPhoto
     */
    image1024x1024?: string;
}

/**
 * Check if a given object implements the UserBaseResponseAllOfPhoto interface.
 */
export function instanceOfUserBaseResponseAllOfPhoto(value: object): value is UserBaseResponseAllOfPhoto {
    return true;
}

export function UserBaseResponseAllOfPhotoFromJSON(json: any): UserBaseResponseAllOfPhoto {
    return UserBaseResponseAllOfPhotoFromJSONTyped(json, false);
}

export function UserBaseResponseAllOfPhotoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserBaseResponseAllOfPhoto {
    if (json == null) {
        return json;
    }
    return {
        
        'image21x21': json['image_21x21'] == null ? undefined : json['image_21x21'],
        'image27x27': json['image_27x27'] == null ? undefined : json['image_27x27'],
        'image36x36': json['image_36x36'] == null ? undefined : json['image_36x36'],
        'image60x60': json['image_60x60'] == null ? undefined : json['image_60x60'],
        'image128x128': json['image_128x128'] == null ? undefined : json['image_128x128'],
        'image1024x1024': json['image_1024x1024'] == null ? undefined : json['image_1024x1024'],
    };
}

export function UserBaseResponseAllOfPhotoToJSON(json: any): UserBaseResponseAllOfPhoto {
    return UserBaseResponseAllOfPhotoToJSONTyped(json, false);
}

export function UserBaseResponseAllOfPhotoToJSONTyped(value?: UserBaseResponseAllOfPhoto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'image_21x21': value['image21x21'],
        'image_27x27': value['image27x27'],
        'image_36x36': value['image36x36'],
        'image_60x60': value['image60x60'],
        'image_128x128': value['image128x128'],
        'image_1024x1024': value['image1024x1024'],
    };
}

