/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { WorkspaceCompact } from './WorkspaceCompact.js';
import {
    WorkspaceCompactFromJSON,
    WorkspaceCompactFromJSONTyped,
    WorkspaceCompactToJSON,
    WorkspaceCompactToJSONTyped,
} from './WorkspaceCompact.js';

/**
 * An *organization_export* object represents a request to export the complete data of an Organization in JSON format.
 * @export
 * @interface OrganizationExportCompact
 */
export interface OrganizationExportCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof OrganizationExportCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof OrganizationExportCompact
     */
    readonly resourceType?: string;
    /**
     * The time at which this resource was created.
     * @type {Date}
     * @memberof OrganizationExportCompact
     */
    readonly createdAt?: Date;
    /**
     * Download this URL to retreive the full export of the organization
     * in JSON format. It will be compressed in a gzip (.gz) container.
     * 
     * *Note: May be null if the export is still in progress or
     * failed.  If present, this URL may only be valid for 1 hour from
     * the time of retrieval. You should avoid persisting this URL
     * somewhere and rather refresh on demand to ensure you do not keep
     * stale URLs.*
     * @type {string}
     * @memberof OrganizationExportCompact
     */
    readonly downloadUrl?: string | null;
    /**
     * The current state of the export.
     * @type {string}
     * @memberof OrganizationExportCompact
     */
    readonly state?: OrganizationExportCompactStateEnum;
    /**
     * 
     * @type {WorkspaceCompact}
     * @memberof OrganizationExportCompact
     */
    organization?: WorkspaceCompact;
}


/**
 * @export
 */
export const OrganizationExportCompactStateEnum = {
    Pending: 'pending',
    Started: 'started',
    Finished: 'finished',
    Error: 'error'
} as const;
export type OrganizationExportCompactStateEnum = typeof OrganizationExportCompactStateEnum[keyof typeof OrganizationExportCompactStateEnum];


/**
 * Check if a given object implements the OrganizationExportCompact interface.
 */
export function instanceOfOrganizationExportCompact(value: object): value is OrganizationExportCompact {
    return true;
}

export function OrganizationExportCompactFromJSON(json: any): OrganizationExportCompact {
    return OrganizationExportCompactFromJSONTyped(json, false);
}

export function OrganizationExportCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationExportCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'downloadUrl': json['download_url'] == null ? undefined : json['download_url'],
        'state': json['state'] == null ? undefined : json['state'],
        'organization': json['organization'] == null ? undefined : WorkspaceCompactFromJSON(json['organization']),
    };
}

export function OrganizationExportCompactToJSON(json: any): OrganizationExportCompact {
    return OrganizationExportCompactToJSONTyped(json, false);
}

export function OrganizationExportCompactToJSONTyped(value?: Omit<OrganizationExportCompact, 'gid'|'resource_type'|'created_at'|'download_url'|'state'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization': WorkspaceCompactToJSON(value['organization']),
    };
}

