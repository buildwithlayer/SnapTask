/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { DateVariableRequest } from './DateVariableRequest.js';
import {
    DateVariableRequestFromJSON,
    DateVariableRequestFromJSONTyped,
    DateVariableRequestToJSON,
    DateVariableRequestToJSONTyped,
} from './DateVariableRequest.js';
import type { RequestedRoleRequest } from './RequestedRoleRequest.js';
import {
    RequestedRoleRequestFromJSON,
    RequestedRoleRequestFromJSONTyped,
    RequestedRoleRequestToJSON,
    RequestedRoleRequestToJSONTyped,
} from './RequestedRoleRequest.js';

/**
 * 
 * @export
 * @interface ProjectTemplateInstantiateProjectRequest
 */
export interface ProjectTemplateInstantiateProjectRequest {
    /**
     * The name of the new project.
     * @type {string}
     * @memberof ProjectTemplateInstantiateProjectRequest
     */
    name: string;
    /**
     * *Optional*. Sets the team of the new project. If the project template exists in an _organization_, you may specify a value for `team`. If no value is provided then it defaults to the same team as the project template.
     * @type {string}
     * @memberof ProjectTemplateInstantiateProjectRequest
     */
    team?: string;
    /**
     * *Deprecated:* new integrations use `privacy_setting` instead.
     * @type {boolean}
     * @memberof ProjectTemplateInstantiateProjectRequest
     * @deprecated
     */
    _public?: boolean;
    /**
     * The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*
     * @type {string}
     * @memberof ProjectTemplateInstantiateProjectRequest
     */
    privacySetting?: ProjectTemplateInstantiateProjectRequestPrivacySettingEnum;
    /**
     * *Optional*. If set to `true`, the endpoint returns an "Unprocessable Entity" error if you fail to provide a calendar date value for any date variable. If set to `false`, a default date is used for each unfulfilled date variable (e.g., the current date is used as the Start Date of a project).
     * @type {boolean}
     * @memberof ProjectTemplateInstantiateProjectRequest
     */
    isStrict?: boolean;
    /**
     * *Conditional*. Array of mappings of date variables to calendar dates. This property is required in the instantiation request if the project template includes dates (e.g., a start date on a task).
     * @type {Array<DateVariableRequest>}
     * @memberof ProjectTemplateInstantiateProjectRequest
     */
    requestedDates?: Array<DateVariableRequest>;
    /**
     * Array of mappings of template roles to user ids
     * @type {Array<RequestedRoleRequest>}
     * @memberof ProjectTemplateInstantiateProjectRequest
     */
    requestedRoles?: Array<RequestedRoleRequest>;
}


/**
 * @export
 */
export const ProjectTemplateInstantiateProjectRequestPrivacySettingEnum = {
    PublicToWorkspace: 'public_to_workspace',
    PrivateToTeam: 'private_to_team',
    Private: 'private'
} as const;
export type ProjectTemplateInstantiateProjectRequestPrivacySettingEnum = typeof ProjectTemplateInstantiateProjectRequestPrivacySettingEnum[keyof typeof ProjectTemplateInstantiateProjectRequestPrivacySettingEnum];


/**
 * Check if a given object implements the ProjectTemplateInstantiateProjectRequest interface.
 */
export function instanceOfProjectTemplateInstantiateProjectRequest(value: object): value is ProjectTemplateInstantiateProjectRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ProjectTemplateInstantiateProjectRequestFromJSON(json: any): ProjectTemplateInstantiateProjectRequest {
    return ProjectTemplateInstantiateProjectRequestFromJSONTyped(json, false);
}

export function ProjectTemplateInstantiateProjectRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectTemplateInstantiateProjectRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'team': json['team'] == null ? undefined : json['team'],
        '_public': json['public'] == null ? undefined : json['public'],
        'privacySetting': json['privacy_setting'] == null ? undefined : json['privacy_setting'],
        'isStrict': json['is_strict'] == null ? undefined : json['is_strict'],
        'requestedDates': json['requested_dates'] == null ? undefined : ((json['requested_dates'] as Array<any>).map(DateVariableRequestFromJSON)),
        'requestedRoles': json['requested_roles'] == null ? undefined : ((json['requested_roles'] as Array<any>).map(RequestedRoleRequestFromJSON)),
    };
}

export function ProjectTemplateInstantiateProjectRequestToJSON(json: any): ProjectTemplateInstantiateProjectRequest {
    return ProjectTemplateInstantiateProjectRequestToJSONTyped(json, false);
}

export function ProjectTemplateInstantiateProjectRequestToJSONTyped(value?: ProjectTemplateInstantiateProjectRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'team': value['team'],
        'public': value['_public'],
        'privacy_setting': value['privacySetting'],
        'is_strict': value['isStrict'],
        'requested_dates': value['requestedDates'] == null ? undefined : ((value['requestedDates'] as Array<any>).map(DateVariableRequestToJSON)),
        'requested_roles': value['requestedRoles'] == null ? undefined : ((value['requestedRoles'] as Array<any>).map(RequestedRoleRequestToJSON)),
    };
}

