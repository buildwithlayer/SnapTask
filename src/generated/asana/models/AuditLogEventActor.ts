/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * The entity that triggered the event. Will typically be a user.
 * @export
 * @interface AuditLogEventActor
 */
export interface AuditLogEventActor {
    /**
     * The type of actor.
     * Can be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`.
     * @type {string}
     * @memberof AuditLogEventActor
     */
    actorType?: AuditLogEventActorActorTypeEnum;
    /**
     * Globally unique identifier of the actor, if it is a user.
     * @type {string}
     * @memberof AuditLogEventActor
     */
    gid?: string;
    /**
     * The name of the actor, if it is a user.
     * @type {string}
     * @memberof AuditLogEventActor
     */
    name?: string;
    /**
     * The email of the actor, if it is a user.
     * @type {string}
     * @memberof AuditLogEventActor
     */
    email?: string;
}


/**
 * @export
 */
export const AuditLogEventActorActorTypeEnum = {
    User: 'user',
    Asana: 'asana',
    AsanaSupport: 'asana_support',
    Anonymous: 'anonymous',
    ExternalAdministrator: 'external_administrator'
} as const;
export type AuditLogEventActorActorTypeEnum = typeof AuditLogEventActorActorTypeEnum[keyof typeof AuditLogEventActorActorTypeEnum];


/**
 * Check if a given object implements the AuditLogEventActor interface.
 */
export function instanceOfAuditLogEventActor(value: object): value is AuditLogEventActor {
    return true;
}

export function AuditLogEventActorFromJSON(json: any): AuditLogEventActor {
    return AuditLogEventActorFromJSONTyped(json, false);
}

export function AuditLogEventActorFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditLogEventActor {
    if (json == null) {
        return json;
    }
    return {
        
        'actorType': json['actor_type'] == null ? undefined : json['actor_type'],
        'gid': json['gid'] == null ? undefined : json['gid'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
    };
}

export function AuditLogEventActorToJSON(json: any): AuditLogEventActor {
    return AuditLogEventActorToJSONTyped(json, false);
}

export function AuditLogEventActorToJSONTyped(value?: AuditLogEventActor | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actor_type': value['actorType'],
        'gid': value['gid'],
        'name': value['name'],
        'email': value['email'],
    };
}

