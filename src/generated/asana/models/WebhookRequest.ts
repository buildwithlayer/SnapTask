/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { WebhookRequestFiltersInner } from './WebhookRequestFiltersInner.js';
import {
    WebhookRequestFiltersInnerFromJSON,
    WebhookRequestFiltersInnerFromJSONTyped,
    WebhookRequestFiltersInnerToJSON,
    WebhookRequestFiltersInnerToJSONTyped,
} from './WebhookRequestFiltersInner.js';

/**
 * 
 * @export
 * @interface WebhookRequest
 */
export interface WebhookRequest {
    /**
     * A resource ID to subscribe to. Many Asana resources are valid to create webhooks on, but higher-level resources require filters.
     * @type {string}
     * @memberof WebhookRequest
     */
    resource: string;
    /**
     * The URL to receive the HTTP POST. The full URL will be used to deliver events from this webhook (including parameters) which allows encoding of application-specific state when the webhook is created.
     * @type {string}
     * @memberof WebhookRequest
     */
    target: string;
    /**
     * An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
     * @type {Array<WebhookRequestFiltersInner>}
     * @memberof WebhookRequest
     */
    filters?: Array<WebhookRequestFiltersInner>;
}

/**
 * Check if a given object implements the WebhookRequest interface.
 */
export function instanceOfWebhookRequest(value: object): value is WebhookRequest {
    if (!('resource' in value) || value['resource'] === undefined) return false;
    if (!('target' in value) || value['target'] === undefined) return false;
    return true;
}

export function WebhookRequestFromJSON(json: any): WebhookRequest {
    return WebhookRequestFromJSONTyped(json, false);
}

export function WebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'resource': json['resource'],
        'target': json['target'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(WebhookRequestFiltersInnerFromJSON)),
    };
}

export function WebhookRequestToJSON(json: any): WebhookRequest {
    return WebhookRequestToJSONTyped(json, false);
}

export function WebhookRequestToJSONTyped(value?: WebhookRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource': value['resource'],
        'target': value['target'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(WebhookRequestFiltersInnerToJSON)),
    };
}

