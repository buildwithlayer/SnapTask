/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Filters to apply to a resource that will be exported. These filters can be used to narrow down the resources that are included in the export.
 * @export
 * @interface ResourceExportFilters
 */
export interface ResourceExportFilters {
    /**
     * Filter by the users who assigned the resource. This array accepts a list of user GIDs. This is only applicable to tasks.
     * @type {Array<string>}
     * @memberof ResourceExportFilters
     */
    assignedByAny?: Array<string>;
    /**
     * Filter by the users who are assigned to the resource. This array accepts a list of user GIDs. This is only applicable to tasks.
     * @type {Array<string>}
     * @memberof ResourceExportFilters
     */
    assigneeAny?: Array<string>;
    /**
     * Filter by the users who commented on the resource. This array accepts a list of user GIDs.
     * @type {Array<string>}
     * @memberof ResourceExportFilters
     */
    commentedOnByAny?: Array<string>;
    /**
     * Filter results to resources created after a specified date and time.
     * @type {Date}
     * @memberof ResourceExportFilters
     */
    createdAtAfter?: Date;
    /**
     * Filter results to resources created before a specified date and time.
     * @type {Date}
     * @memberof ResourceExportFilters
     */
    createdAtBefore?: Date;
    /**
     * Filter by the users who created the resource. This array accepts a list of user GIDs.
     * @type {Array<string>}
     * @memberof ResourceExportFilters
     */
    createdByAny?: Array<string>;
    /**
     * Filter by the users who are following the resource. This array accepts a list of user GIDs.
     * @type {Array<string>}
     * @memberof ResourceExportFilters
     */
    followersAny?: Array<string>;
    /**
     * Filter by the users who liked the resource. This array accepts a list of user GIDs.
     * @type {Array<string>}
     * @memberof ResourceExportFilters
     */
    likedByAny?: Array<string>;
    /**
     * Filter results to resources modified after a specified date and time.
     * @type {Date}
     * @memberof ResourceExportFilters
     */
    modifiedAtAfter?: Date;
    /**
     * Filter results to resources modified before a specified date and time.
     * @type {Date}
     * @memberof ResourceExportFilters
     */
    modifiedAtBefore?: Date;
}

/**
 * Check if a given object implements the ResourceExportFilters interface.
 */
export function instanceOfResourceExportFilters(value: object): value is ResourceExportFilters {
    return true;
}

export function ResourceExportFiltersFromJSON(json: any): ResourceExportFilters {
    return ResourceExportFiltersFromJSONTyped(json, false);
}

export function ResourceExportFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceExportFilters {
    if (json == null) {
        return json;
    }
    return {
        
        'assignedByAny': json['assigned_by.any'] == null ? undefined : json['assigned_by.any'],
        'assigneeAny': json['assignee.any'] == null ? undefined : json['assignee.any'],
        'commentedOnByAny': json['commented_on_by.any'] == null ? undefined : json['commented_on_by.any'],
        'createdAtAfter': json['created_at.after'] == null ? undefined : (new Date(json['created_at.after'])),
        'createdAtBefore': json['created_at.before'] == null ? undefined : (new Date(json['created_at.before'])),
        'createdByAny': json['created_by.any'] == null ? undefined : json['created_by.any'],
        'followersAny': json['followers.any'] == null ? undefined : json['followers.any'],
        'likedByAny': json['liked_by.any'] == null ? undefined : json['liked_by.any'],
        'modifiedAtAfter': json['modified_at.after'] == null ? undefined : (new Date(json['modified_at.after'])),
        'modifiedAtBefore': json['modified_at.before'] == null ? undefined : (new Date(json['modified_at.before'])),
    };
}

export function ResourceExportFiltersToJSON(json: any): ResourceExportFilters {
    return ResourceExportFiltersToJSONTyped(json, false);
}

export function ResourceExportFiltersToJSONTyped(value?: ResourceExportFilters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'assigned_by.any': value['assignedByAny'],
        'assignee.any': value['assigneeAny'],
        'commented_on_by.any': value['commentedOnByAny'],
        'created_at.after': value['createdAtAfter'] == null ? undefined : ((value['createdAtAfter']).toISOString()),
        'created_at.before': value['createdAtBefore'] == null ? undefined : ((value['createdAtBefore']).toISOString()),
        'created_by.any': value['createdByAny'],
        'followers.any': value['followersAny'],
        'liked_by.any': value['likedByAny'],
        'modified_at.after': value['modifiedAtAfter'] == null ? undefined : ((value['modifiedAtAfter']).toISOString()),
        'modified_at.before': value['modifiedAtBefore'] == null ? undefined : ((value['modifiedAtBefore']).toISOString()),
    };
}

