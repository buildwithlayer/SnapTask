/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * The amount of time associated with the allocation, represented as a percentage or number of hours
 * @export
 * @interface AllocationBaseEffort
 */
export interface AllocationBaseEffort {
    /**
     * The units used for tracking effort on an allocation, either "hours" or "percent".
     * @type {string}
     * @memberof AllocationBaseEffort
     */
    type?: AllocationBaseEffortTypeEnum;
    /**
     * The numeric effort value on the allocation.
     * @type {number}
     * @memberof AllocationBaseEffort
     */
    value?: number;
}


/**
 * @export
 */
export const AllocationBaseEffortTypeEnum = {
    Hours: 'hours',
    Percent: 'percent'
} as const;
export type AllocationBaseEffortTypeEnum = typeof AllocationBaseEffortTypeEnum[keyof typeof AllocationBaseEffortTypeEnum];


/**
 * Check if a given object implements the AllocationBaseEffort interface.
 */
export function instanceOfAllocationBaseEffort(value: object): value is AllocationBaseEffort {
    return true;
}

export function AllocationBaseEffortFromJSON(json: any): AllocationBaseEffort {
    return AllocationBaseEffortFromJSONTyped(json, false);
}

export function AllocationBaseEffortFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocationBaseEffort {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function AllocationBaseEffortToJSON(json: any): AllocationBaseEffort {
    return AllocationBaseEffortToJSONTyped(json, false);
}

export function AllocationBaseEffortToJSONTyped(value?: AllocationBaseEffort | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'value': value['value'],
    };
}

