/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface TaskAddProjectRequest
 */
export interface TaskAddProjectRequest {
    /**
     * The project to add the task to.
     * @type {string}
     * @memberof TaskAddProjectRequest
     */
    project: string;
    /**
     * A task in the project to insert the task after, or `null` to insert at the beginning of the list.
     * @type {string}
     * @memberof TaskAddProjectRequest
     */
    insertAfter?: string | null;
    /**
     * A task in the project to insert the task before, or `null` to insert at the end of the list.
     * @type {string}
     * @memberof TaskAddProjectRequest
     */
    insertBefore?: string | null;
    /**
     * A section in the project to insert the task into. The task will be inserted at the bottom of the section.
     * @type {string}
     * @memberof TaskAddProjectRequest
     */
    section?: string | null;
}

/**
 * Check if a given object implements the TaskAddProjectRequest interface.
 */
export function instanceOfTaskAddProjectRequest(value: object): value is TaskAddProjectRequest {
    if (!('project' in value) || value['project'] === undefined) return false;
    return true;
}

export function TaskAddProjectRequestFromJSON(json: any): TaskAddProjectRequest {
    return TaskAddProjectRequestFromJSONTyped(json, false);
}

export function TaskAddProjectRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskAddProjectRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'project': json['project'],
        'insertAfter': json['insert_after'] == null ? undefined : json['insert_after'],
        'insertBefore': json['insert_before'] == null ? undefined : json['insert_before'],
        'section': json['section'] == null ? undefined : json['section'],
    };
}

export function TaskAddProjectRequestToJSON(json: any): TaskAddProjectRequest {
    return TaskAddProjectRequestToJSONTyped(json, false);
}

export function TaskAddProjectRequestToJSONTyped(value?: TaskAddProjectRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project': value['project'],
        'insert_after': value['insertAfter'],
        'insert_before': value['insertBefore'],
        'section': value['section'],
    };
}

