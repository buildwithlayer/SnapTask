/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { WebhookResponseAllOfFilters } from './WebhookResponseAllOfFilters.js';
import {
    WebhookResponseAllOfFiltersFromJSON,
    WebhookResponseAllOfFiltersFromJSONTyped,
    WebhookResponseAllOfFiltersToJSON,
    WebhookResponseAllOfFiltersToJSONTyped,
} from './WebhookResponseAllOfFilters.js';

/**
 * 
 * @export
 * @interface WebhookUpdateRequest
 */
export interface WebhookUpdateRequest {
    /**
     * An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
     * @type {Array<WebhookResponseAllOfFilters>}
     * @memberof WebhookUpdateRequest
     */
    filters?: Array<WebhookResponseAllOfFilters>;
}

/**
 * Check if a given object implements the WebhookUpdateRequest interface.
 */
export function instanceOfWebhookUpdateRequest(value: object): value is WebhookUpdateRequest {
    return true;
}

export function WebhookUpdateRequestFromJSON(json: any): WebhookUpdateRequest {
    return WebhookUpdateRequestFromJSONTyped(json, false);
}

export function WebhookUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(WebhookResponseAllOfFiltersFromJSON)),
    };
}

export function WebhookUpdateRequestToJSON(json: any): WebhookUpdateRequest {
    return WebhookUpdateRequestToJSONTyped(json, false);
}

export function WebhookUpdateRequestToJSONTyped(value?: WebhookUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(WebhookResponseAllOfFiltersToJSON)),
    };
}

