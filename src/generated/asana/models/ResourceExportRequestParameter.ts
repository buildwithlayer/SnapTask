/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ResourceExportFilters } from './ResourceExportFilters.js';
import {
    ResourceExportFiltersFromJSON,
    ResourceExportFiltersFromJSONTyped,
    ResourceExportFiltersToJSON,
    ResourceExportFiltersToJSONTyped,
} from './ResourceExportFilters.js';

/**
 * 
 * @export
 * @interface ResourceExportRequestParameter
 */
export interface ResourceExportRequestParameter {
    /**
     * The type of the resource to be exported. This can be a task, team, or message.
     * @type {string}
     * @memberof ResourceExportRequestParameter
     */
    resourceType?: string;
    /**
     * 
     * @type {ResourceExportFilters}
     * @memberof ResourceExportRequestParameter
     */
    filters?: ResourceExportFilters;
    /**
     * An array of fields to include for the resource type. If not provided, all non-optional fields for the resource type will be included. This conforms to the fields optional parameter available for all Asana endpoints which is documented [here](https://developers.asana.com/docs/inputoutput-options)
     * @type {Array<string>}
     * @memberof ResourceExportRequestParameter
     */
    fields?: Array<string>;
}

/**
 * Check if a given object implements the ResourceExportRequestParameter interface.
 */
export function instanceOfResourceExportRequestParameter(value: object): value is ResourceExportRequestParameter {
    return true;
}

export function ResourceExportRequestParameterFromJSON(json: any): ResourceExportRequestParameter {
    return ResourceExportRequestParameterFromJSONTyped(json, false);
}

export function ResourceExportRequestParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceExportRequestParameter {
    if (json == null) {
        return json;
    }
    return {
        
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'filters': json['filters'] == null ? undefined : ResourceExportFiltersFromJSON(json['filters']),
        'fields': json['fields'] == null ? undefined : json['fields'],
    };
}

export function ResourceExportRequestParameterToJSON(json: any): ResourceExportRequestParameter {
    return ResourceExportRequestParameterToJSONTyped(json, false);
}

export function ResourceExportRequestParameterToJSONTyped(value?: ResourceExportRequestParameter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource_type': value['resourceType'],
        'filters': ResourceExportFiltersToJSON(value['filters']),
        'fields': value['fields'],
    };
}

