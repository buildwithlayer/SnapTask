/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ProjectCompact } from './ProjectCompact.js';
import {
    ProjectCompactFromJSON,
    ProjectCompactFromJSONTyped,
    ProjectCompactToJSON,
    ProjectCompactToJSONTyped,
} from './ProjectCompact.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';
import type { TaskTemplateRecipe } from './TaskTemplateRecipe.js';
import {
    TaskTemplateRecipeFromJSON,
    TaskTemplateRecipeFromJSONTyped,
    TaskTemplateRecipeToJSON,
    TaskTemplateRecipeToJSONTyped,
} from './TaskTemplateRecipe.js';

/**
 * 
 * @export
 * @interface TaskTemplateResponse
 */
export interface TaskTemplateResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof TaskTemplateResponse
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof TaskTemplateResponse
     */
    readonly resourceType?: string;
    /**
     * Name of the task template.
     * @type {string}
     * @memberof TaskTemplateResponse
     */
    name?: string;
    /**
     * The project that this task template belongs to.
     * @type {ProjectCompact}
     * @memberof TaskTemplateResponse
     */
    project?: ProjectCompact | null;
    /**
     * The configuration for the task that will be created from this template.
     * @type {TaskTemplateRecipe}
     * @memberof TaskTemplateResponse
     */
    template?: TaskTemplateRecipe;
    /**
     * The user who created this task template.
     * @type {UserCompact}
     * @memberof TaskTemplateResponse
     */
    createdBy?: UserCompact;
    /**
     * The time at which this task template was created.
     * @type {Date}
     * @memberof TaskTemplateResponse
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the TaskTemplateResponse interface.
 */
export function instanceOfTaskTemplateResponse(value: object): value is TaskTemplateResponse {
    return true;
}

export function TaskTemplateResponseFromJSON(json: any): TaskTemplateResponse {
    return TaskTemplateResponseFromJSONTyped(json, false);
}

export function TaskTemplateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskTemplateResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'project': json['project'] == null ? undefined : ProjectCompactFromJSON(json['project']),
        'template': json['template'] == null ? undefined : TaskTemplateRecipeFromJSON(json['template']),
        'createdBy': json['created_by'] == null ? undefined : UserCompactFromJSON(json['created_by']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
    };
}

export function TaskTemplateResponseToJSON(json: any): TaskTemplateResponse {
    return TaskTemplateResponseToJSONTyped(json, false);
}

export function TaskTemplateResponseToJSONTyped(value?: Omit<TaskTemplateResponse, 'gid'|'resource_type'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'project': ProjectCompactToJSON(value['project']),
        'template': TaskTemplateRecipeToJSON(value['template']),
        'created_by': UserCompactToJSON(value['createdBy']),
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

