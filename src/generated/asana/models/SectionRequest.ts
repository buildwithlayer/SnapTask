/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface SectionRequest
 */
export interface SectionRequest {
    /**
     * The text to be displayed as the section name. This cannot be an empty string.
     * @type {string}
     * @memberof SectionRequest
     */
    name: string;
    /**
     * An existing section within this project before which the added section should be inserted. Cannot be provided together with insert_after.
     * @type {string}
     * @memberof SectionRequest
     */
    insertBefore?: string;
    /**
     * An existing section within this project after which the added section should be inserted. Cannot be provided together with insert_before.
     * @type {string}
     * @memberof SectionRequest
     */
    insertAfter?: string;
}

/**
 * Check if a given object implements the SectionRequest interface.
 */
export function instanceOfSectionRequest(value: object): value is SectionRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function SectionRequestFromJSON(json: any): SectionRequest {
    return SectionRequestFromJSONTyped(json, false);
}

export function SectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SectionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'insertBefore': json['insert_before'] == null ? undefined : json['insert_before'],
        'insertAfter': json['insert_after'] == null ? undefined : json['insert_after'],
    };
}

export function SectionRequestToJSON(json: any): SectionRequest {
    return SectionRequestToJSONTyped(json, false);
}

export function SectionRequestToJSONTyped(value?: SectionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'insert_before': value['insertBefore'],
        'insert_after': value['insertAfter'],
    };
}

