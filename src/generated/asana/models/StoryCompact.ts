/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';

/**
 * A story represents an activity associated with an object in the Asana system.
 * @export
 * @interface StoryCompact
 */
export interface StoryCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof StoryCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof StoryCompact
     */
    readonly resourceType?: string;
    /**
     * The time at which this resource was created.
     * @type {Date}
     * @memberof StoryCompact
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {UserCompact}
     * @memberof StoryCompact
     */
    createdBy?: UserCompact;
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * @type {string}
     * @memberof StoryCompact
     */
    readonly resourceSubtype?: string;
    /**
     * *Create-only*. Human-readable text for the story or comment.
     * This will not include the name of the creator.
     * *Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say “assigned to …” as the text for a story can both be edited and change based on the language settings of the user making the request.*
     * Use the `resource_subtype` property to discover the action that created the story.
     * @type {string}
     * @memberof StoryCompact
     */
    text?: string;
}

/**
 * Check if a given object implements the StoryCompact interface.
 */
export function instanceOfStoryCompact(value: object): value is StoryCompact {
    return true;
}

export function StoryCompactFromJSON(json: any): StoryCompact {
    return StoryCompactFromJSONTyped(json, false);
}

export function StoryCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoryCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'createdBy': json['created_by'] == null ? undefined : UserCompactFromJSON(json['created_by']),
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function StoryCompactToJSON(json: any): StoryCompact {
    return StoryCompactToJSONTyped(json, false);
}

export function StoryCompactToJSONTyped(value?: Omit<StoryCompact, 'gid'|'resource_type'|'created_at'|'resource_subtype'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_by': UserCompactToJSON(value['createdBy']),
        'text': value['text'],
    };
}

