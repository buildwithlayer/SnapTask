/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * *Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.
 * @export
 * @interface NextPage
 */
export interface NextPage {
    /**
     * Pagination offset for the request.
     * @type {string}
     * @memberof NextPage
     */
    readonly offset?: string;
    /**
     * A relative path containing the query parameters to fetch for next_page
     * @type {string}
     * @memberof NextPage
     */
    readonly path?: string;
    /**
     * A full uri containing the query parameters to fetch for next_page
     * @type {string}
     * @memberof NextPage
     */
    readonly uri?: string;
}

/**
 * Check if a given object implements the NextPage interface.
 */
export function instanceOfNextPage(value: object): value is NextPage {
    return true;
}

export function NextPageFromJSON(json: any): NextPage {
    return NextPageFromJSONTyped(json, false);
}

export function NextPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): NextPage {
    if (json == null) {
        return json;
    }
    return {
        
        'offset': json['offset'] == null ? undefined : json['offset'],
        'path': json['path'] == null ? undefined : json['path'],
        'uri': json['uri'] == null ? undefined : json['uri'],
    };
}

export function NextPageToJSON(json: any): NextPage {
    return NextPageToJSONTyped(json, false);
}

export function NextPageToJSONTyped(value?: Omit<NextPage, 'offset'|'path'|'uri'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

