/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ProjectTemplateCompact } from './ProjectTemplateCompact.js';
import {
    ProjectTemplateCompactFromJSON,
    ProjectTemplateCompactFromJSONTyped,
    ProjectTemplateCompactToJSON,
    ProjectTemplateCompactToJSONTyped,
} from './ProjectTemplateCompact.js';
import type { ResourceExportCompact } from './ResourceExportCompact.js';
import {
    ResourceExportCompactFromJSON,
    ResourceExportCompactFromJSONTyped,
    ResourceExportCompactToJSON,
    ResourceExportCompactToJSONTyped,
} from './ResourceExportCompact.js';
import type { JobCompactNewTask } from './JobCompactNewTask.js';
import {
    JobCompactNewTaskFromJSON,
    JobCompactNewTaskFromJSONTyped,
    JobCompactNewTaskToJSON,
    JobCompactNewTaskToJSONTyped,
} from './JobCompactNewTask.js';
import type { ProjectCompact } from './ProjectCompact.js';
import {
    ProjectCompactFromJSON,
    ProjectCompactFromJSONTyped,
    ProjectCompactToJSON,
    ProjectCompactToJSONTyped,
} from './ProjectCompact.js';
import type { GraphExportCompact } from './GraphExportCompact.js';
import {
    GraphExportCompactFromJSON,
    GraphExportCompactFromJSONTyped,
    GraphExportCompactToJSON,
    GraphExportCompactToJSONTyped,
} from './GraphExportCompact.js';

/**
 * A *job* is an object representing a process that handles asynchronous work.
 * @export
 * @interface JobCompact
 */
export interface JobCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof JobCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof JobCompact
     */
    readonly resourceType?: string;
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * @type {string}
     * @memberof JobCompact
     */
    readonly resourceSubtype?: string;
    /**
     * The current status of this job.
     * @type {string}
     * @memberof JobCompact
     */
    readonly status?: JobCompactStatusEnum;
    /**
     * 
     * @type {ProjectCompact}
     * @memberof JobCompact
     */
    newProject?: ProjectCompact;
    /**
     * 
     * @type {JobCompactNewTask}
     * @memberof JobCompact
     */
    newTask?: JobCompactNewTask;
    /**
     * 
     * @type {ProjectTemplateCompact}
     * @memberof JobCompact
     */
    newProjectTemplate?: ProjectTemplateCompact;
    /**
     * 
     * @type {GraphExportCompact}
     * @memberof JobCompact
     */
    newGraphExport?: GraphExportCompact;
    /**
     * 
     * @type {ResourceExportCompact}
     * @memberof JobCompact
     */
    newResourceExport?: ResourceExportCompact;
}


/**
 * @export
 */
export const JobCompactStatusEnum = {
    NotStarted: 'not_started',
    InProgress: 'in_progress',
    Succeeded: 'succeeded',
    Failed: 'failed'
} as const;
export type JobCompactStatusEnum = typeof JobCompactStatusEnum[keyof typeof JobCompactStatusEnum];


/**
 * Check if a given object implements the JobCompact interface.
 */
export function instanceOfJobCompact(value: object): value is JobCompact {
    return true;
}

export function JobCompactFromJSON(json: any): JobCompact {
    return JobCompactFromJSONTyped(json, false);
}

export function JobCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'status': json['status'] == null ? undefined : json['status'],
        'newProject': json['new_project'] == null ? undefined : ProjectCompactFromJSON(json['new_project']),
        'newTask': json['new_task'] == null ? undefined : JobCompactNewTaskFromJSON(json['new_task']),
        'newProjectTemplate': json['new_project_template'] == null ? undefined : ProjectTemplateCompactFromJSON(json['new_project_template']),
        'newGraphExport': json['new_graph_export'] == null ? undefined : GraphExportCompactFromJSON(json['new_graph_export']),
        'newResourceExport': json['new_resource_export'] == null ? undefined : ResourceExportCompactFromJSON(json['new_resource_export']),
    };
}

export function JobCompactToJSON(json: any): JobCompact {
    return JobCompactToJSONTyped(json, false);
}

export function JobCompactToJSONTyped(value?: Omit<JobCompact, 'gid'|'resource_type'|'resource_subtype'|'status'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'new_project': ProjectCompactToJSON(value['newProject']),
        'new_task': JobCompactNewTaskToJSON(value['newTask']),
        'new_project_template': ProjectTemplateCompactToJSON(value['newProjectTemplate']),
        'new_graph_export': GraphExportCompactToJSON(value['newGraphExport']),
        'new_resource_export': ResourceExportCompactToJSON(value['newResourceExport']),
    };
}

