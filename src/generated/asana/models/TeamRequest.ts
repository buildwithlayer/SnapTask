/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface TeamRequest
 */
export interface TeamRequest {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof TeamRequest
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof TeamRequest
     */
    readonly resourceType?: string;
    /**
     * The name of the team.
     * @type {string}
     * @memberof TeamRequest
     */
    name?: string;
    /**
     * The description of the team.
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    description?: string;
    /**
     * The description of the team with formatting as HTML.
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    htmlDescription?: string;
    /**
     * The organization/workspace the team belongs to. This must be the same organization you are in and cannot be changed once set.
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    organization?: string;
    /**
     * The visibility of the team to users in the same organization
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    visibility?: TeamRequestVisibilityEnum;
    /**
     * Controls who can edit team name and description
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    editTeamNameOrDescriptionAccessLevel?: TeamRequestEditTeamNameOrDescriptionAccessLevelEnum;
    /**
     * Controls who can edit team visibility and trash teams
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    editTeamVisibilityOrTrashTeamAccessLevel?: TeamRequestEditTeamVisibilityOrTrashTeamAccessLevelEnum;
    /**
     * Controls who can accept or deny member invites for a given team
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    memberInviteManagementAccessLevel?: TeamRequestMemberInviteManagementAccessLevelEnum;
    /**
     * Controls who can accept or deny guest invites for a given team
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    guestInviteManagementAccessLevel?: TeamRequestGuestInviteManagementAccessLevelEnum;
    /**
     * Controls who can accept or deny join team requests for a Membership by Request team. This field can only be updated when the team's `visibility` field is `request_to_join`.
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    joinRequestManagementAccessLevel?: TeamRequestJoinRequestManagementAccessLevelEnum;
    /**
     * Controls who can remove team members
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    teamMemberRemovalAccessLevel?: TeamRequestTeamMemberRemovalAccessLevelEnum;
    /**
     * Controls who can create and share content with the team
     * 
     * @type {string}
     * @memberof TeamRequest
     */
    teamContentManagementAccessLevel?: TeamRequestTeamContentManagementAccessLevelEnum;
    /**
     * Whether the team has been endorsed
     * 
     * @type {boolean}
     * @memberof TeamRequest
     */
    endorsed?: boolean;
}


/**
 * @export
 */
export const TeamRequestVisibilityEnum = {
    Secret: 'secret',
    RequestToJoin: 'request_to_join',
    Public: 'public'
} as const;
export type TeamRequestVisibilityEnum = typeof TeamRequestVisibilityEnum[keyof typeof TeamRequestVisibilityEnum];

/**
 * @export
 */
export const TeamRequestEditTeamNameOrDescriptionAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestEditTeamNameOrDescriptionAccessLevelEnum = typeof TeamRequestEditTeamNameOrDescriptionAccessLevelEnum[keyof typeof TeamRequestEditTeamNameOrDescriptionAccessLevelEnum];

/**
 * @export
 */
export const TeamRequestEditTeamVisibilityOrTrashTeamAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestEditTeamVisibilityOrTrashTeamAccessLevelEnum = typeof TeamRequestEditTeamVisibilityOrTrashTeamAccessLevelEnum[keyof typeof TeamRequestEditTeamVisibilityOrTrashTeamAccessLevelEnum];

/**
 * @export
 */
export const TeamRequestMemberInviteManagementAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestMemberInviteManagementAccessLevelEnum = typeof TeamRequestMemberInviteManagementAccessLevelEnum[keyof typeof TeamRequestMemberInviteManagementAccessLevelEnum];

/**
 * @export
 */
export const TeamRequestGuestInviteManagementAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestGuestInviteManagementAccessLevelEnum = typeof TeamRequestGuestInviteManagementAccessLevelEnum[keyof typeof TeamRequestGuestInviteManagementAccessLevelEnum];

/**
 * @export
 */
export const TeamRequestJoinRequestManagementAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestJoinRequestManagementAccessLevelEnum = typeof TeamRequestJoinRequestManagementAccessLevelEnum[keyof typeof TeamRequestJoinRequestManagementAccessLevelEnum];

/**
 * @export
 */
export const TeamRequestTeamMemberRemovalAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestTeamMemberRemovalAccessLevelEnum = typeof TeamRequestTeamMemberRemovalAccessLevelEnum[keyof typeof TeamRequestTeamMemberRemovalAccessLevelEnum];

/**
 * @export
 */
export const TeamRequestTeamContentManagementAccessLevelEnum = {
    NoRestriction: 'no_restriction',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamRequestTeamContentManagementAccessLevelEnum = typeof TeamRequestTeamContentManagementAccessLevelEnum[keyof typeof TeamRequestTeamContentManagementAccessLevelEnum];


/**
 * Check if a given object implements the TeamRequest interface.
 */
export function instanceOfTeamRequest(value: object): value is TeamRequest {
    return true;
}

export function TeamRequestFromJSON(json: any): TeamRequest {
    return TeamRequestFromJSONTyped(json, false);
}

export function TeamRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'htmlDescription': json['html_description'] == null ? undefined : json['html_description'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'visibility': json['visibility'] == null ? undefined : json['visibility'],
        'editTeamNameOrDescriptionAccessLevel': json['edit_team_name_or_description_access_level'] == null ? undefined : json['edit_team_name_or_description_access_level'],
        'editTeamVisibilityOrTrashTeamAccessLevel': json['edit_team_visibility_or_trash_team_access_level'] == null ? undefined : json['edit_team_visibility_or_trash_team_access_level'],
        'memberInviteManagementAccessLevel': json['member_invite_management_access_level'] == null ? undefined : json['member_invite_management_access_level'],
        'guestInviteManagementAccessLevel': json['guest_invite_management_access_level'] == null ? undefined : json['guest_invite_management_access_level'],
        'joinRequestManagementAccessLevel': json['join_request_management_access_level'] == null ? undefined : json['join_request_management_access_level'],
        'teamMemberRemovalAccessLevel': json['team_member_removal_access_level'] == null ? undefined : json['team_member_removal_access_level'],
        'teamContentManagementAccessLevel': json['team_content_management_access_level'] == null ? undefined : json['team_content_management_access_level'],
        'endorsed': json['endorsed'] == null ? undefined : json['endorsed'],
    };
}

export function TeamRequestToJSON(json: any): TeamRequest {
    return TeamRequestToJSONTyped(json, false);
}

export function TeamRequestToJSONTyped(value?: Omit<TeamRequest, 'gid'|'resource_type'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'html_description': value['htmlDescription'],
        'organization': value['organization'],
        'visibility': value['visibility'],
        'edit_team_name_or_description_access_level': value['editTeamNameOrDescriptionAccessLevel'],
        'edit_team_visibility_or_trash_team_access_level': value['editTeamVisibilityOrTrashTeamAccessLevel'],
        'member_invite_management_access_level': value['memberInviteManagementAccessLevel'],
        'guest_invite_management_access_level': value['guestInviteManagementAccessLevel'],
        'join_request_management_access_level': value['joinRequestManagementAccessLevel'],
        'team_member_removal_access_level': value['teamMemberRemovalAccessLevel'],
        'team_content_management_access_level': value['teamContentManagementAccessLevel'],
        'endorsed': value['endorsed'],
    };
}

