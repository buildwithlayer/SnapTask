/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface PortfolioAddItemRequest
 */
export interface PortfolioAddItemRequest {
    /**
     * The item to add to the portfolio.
     * @type {string}
     * @memberof PortfolioAddItemRequest
     */
    item: string;
    /**
     * An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.
     * @type {string}
     * @memberof PortfolioAddItemRequest
     */
    insertBefore?: string;
    /**
     * An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.
     * @type {string}
     * @memberof PortfolioAddItemRequest
     */
    insertAfter?: string;
}

/**
 * Check if a given object implements the PortfolioAddItemRequest interface.
 */
export function instanceOfPortfolioAddItemRequest(value: object): value is PortfolioAddItemRequest {
    if (!('item' in value) || value['item'] === undefined) return false;
    return true;
}

export function PortfolioAddItemRequestFromJSON(json: any): PortfolioAddItemRequest {
    return PortfolioAddItemRequestFromJSONTyped(json, false);
}

export function PortfolioAddItemRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioAddItemRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'item': json['item'],
        'insertBefore': json['insert_before'] == null ? undefined : json['insert_before'],
        'insertAfter': json['insert_after'] == null ? undefined : json['insert_after'],
    };
}

export function PortfolioAddItemRequestToJSON(json: any): PortfolioAddItemRequest {
    return PortfolioAddItemRequestToJSONTyped(json, false);
}

export function PortfolioAddItemRequestToJSONTyped(value?: PortfolioAddItemRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item': value['item'],
        'insert_before': value['insertBefore'],
        'insert_after': value['insertAfter'],
    };
}

