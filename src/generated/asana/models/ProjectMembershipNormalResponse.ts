/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ProjectCompact } from './ProjectCompact.js';
import {
    ProjectCompactFromJSON,
    ProjectCompactFromJSONTyped,
    ProjectCompactToJSON,
    ProjectCompactToJSONTyped,
} from './ProjectCompact.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';
import type { MemberCompact } from './MemberCompact.js';
import {
    MemberCompactFromJSON,
    MemberCompactFromJSONTyped,
    MemberCompactToJSON,
    MemberCompactToJSONTyped,
} from './MemberCompact.js';

/**
 * 
 * @export
 * @interface ProjectMembershipNormalResponse
 */
export interface ProjectMembershipNormalResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof ProjectMembershipNormalResponse
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof ProjectMembershipNormalResponse
     */
    resourceType?: string;
    /**
     * 
     * @type {ProjectCompact}
     * @memberof ProjectMembershipNormalResponse
     */
    parent?: ProjectCompact;
    /**
     * 
     * @type {MemberCompact}
     * @memberof ProjectMembershipNormalResponse
     */
    member?: MemberCompact;
    /**
     * Whether the member has admin, editor, commenter, or viewer access to the project.
     * @type {string}
     * @memberof ProjectMembershipNormalResponse
     */
    readonly accessLevel?: ProjectMembershipNormalResponseAccessLevelEnum;
    /**
     * 
     * @type {UserCompact}
     * @memberof ProjectMembershipNormalResponse
     */
    user?: UserCompact;
    /**
     * 
     * @type {ProjectCompact}
     * @memberof ProjectMembershipNormalResponse
     */
    project?: ProjectCompact;
    /**
     * Whether the member has full access or comment-only access to the project.
     * @type {string}
     * @memberof ProjectMembershipNormalResponse
     */
    readonly writeAccess?: ProjectMembershipNormalResponseWriteAccessEnum;
}


/**
 * @export
 */
export const ProjectMembershipNormalResponseAccessLevelEnum = {
    Admin: 'admin',
    Editor: 'editor',
    Commenter: 'commenter',
    Viewer: 'viewer'
} as const;
export type ProjectMembershipNormalResponseAccessLevelEnum = typeof ProjectMembershipNormalResponseAccessLevelEnum[keyof typeof ProjectMembershipNormalResponseAccessLevelEnum];

/**
 * @export
 */
export const ProjectMembershipNormalResponseWriteAccessEnum = {
    FullWrite: 'full_write',
    CommentOnly: 'comment_only'
} as const;
export type ProjectMembershipNormalResponseWriteAccessEnum = typeof ProjectMembershipNormalResponseWriteAccessEnum[keyof typeof ProjectMembershipNormalResponseWriteAccessEnum];


/**
 * Check if a given object implements the ProjectMembershipNormalResponse interface.
 */
export function instanceOfProjectMembershipNormalResponse(value: object): value is ProjectMembershipNormalResponse {
    return true;
}

export function ProjectMembershipNormalResponseFromJSON(json: any): ProjectMembershipNormalResponse {
    return ProjectMembershipNormalResponseFromJSONTyped(json, false);
}

export function ProjectMembershipNormalResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectMembershipNormalResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'parent': json['parent'] == null ? undefined : ProjectCompactFromJSON(json['parent']),
        'member': json['member'] == null ? undefined : MemberCompactFromJSON(json['member']),
        'accessLevel': json['access_level'] == null ? undefined : json['access_level'],
        'user': json['user'] == null ? undefined : UserCompactFromJSON(json['user']),
        'project': json['project'] == null ? undefined : ProjectCompactFromJSON(json['project']),
        'writeAccess': json['write_access'] == null ? undefined : json['write_access'],
    };
}

export function ProjectMembershipNormalResponseToJSON(json: any): ProjectMembershipNormalResponse {
    return ProjectMembershipNormalResponseToJSONTyped(json, false);
}

export function ProjectMembershipNormalResponseToJSONTyped(value?: Omit<ProjectMembershipNormalResponse, 'gid'|'access_level'|'write_access'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource_type': value['resourceType'],
        'parent': ProjectCompactToJSON(value['parent']),
        'member': MemberCompactToJSON(value['member']),
        'user': UserCompactToJSON(value['user']),
        'project': ProjectCompactToJSON(value['project']),
    };
}

