/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ProjectCompact } from './ProjectCompact.js';
import {
    ProjectCompactFromJSON,
    ProjectCompactFromJSONTyped,
    ProjectCompactToJSON,
    ProjectCompactToJSONTyped,
} from './ProjectCompact.js';
import type { SectionCompact } from './SectionCompact.js';
import {
    SectionCompactFromJSON,
    SectionCompactFromJSONTyped,
    SectionCompactToJSON,
    SectionCompactToJSONTyped,
} from './SectionCompact.js';

/**
 * 
 * @export
 * @interface TaskBaseAllOfMemberships
 */
export interface TaskBaseAllOfMemberships {
    /**
     * 
     * @type {ProjectCompact}
     * @memberof TaskBaseAllOfMemberships
     */
    project?: ProjectCompact;
    /**
     * 
     * @type {SectionCompact}
     * @memberof TaskBaseAllOfMemberships
     */
    section?: SectionCompact;
}

/**
 * Check if a given object implements the TaskBaseAllOfMemberships interface.
 */
export function instanceOfTaskBaseAllOfMemberships(value: object): value is TaskBaseAllOfMemberships {
    return true;
}

export function TaskBaseAllOfMembershipsFromJSON(json: any): TaskBaseAllOfMemberships {
    return TaskBaseAllOfMembershipsFromJSONTyped(json, false);
}

export function TaskBaseAllOfMembershipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskBaseAllOfMemberships {
    if (json == null) {
        return json;
    }
    return {
        
        'project': json['project'] == null ? undefined : ProjectCompactFromJSON(json['project']),
        'section': json['section'] == null ? undefined : SectionCompactFromJSON(json['section']),
    };
}

export function TaskBaseAllOfMembershipsToJSON(json: any): TaskBaseAllOfMemberships {
    return TaskBaseAllOfMembershipsToJSONTyped(json, false);
}

export function TaskBaseAllOfMembershipsToJSONTyped(value?: TaskBaseAllOfMemberships | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project': ProjectCompactToJSON(value['project']),
        'section': SectionCompactToJSON(value['section']),
    };
}

