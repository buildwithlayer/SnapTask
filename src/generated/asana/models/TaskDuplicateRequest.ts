/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface TaskDuplicateRequest
 */
export interface TaskDuplicateRequest {
    /**
     * The name of the new task.
     * @type {string}
     * @memberof TaskDuplicateRequest
     */
    name?: string;
    /**
     * A comma-separated list of fields that will be duplicated to the new task.
     * ##### Fields
     * - assignee
     * - attachments
     * - dates
     * - dependencies
     * - followers
     * - notes
     * - parent
     * - projects
     * - subtasks
     * - tags
     * @type {string}
     * @memberof TaskDuplicateRequest
     */
    include?: string;
}

/**
 * Check if a given object implements the TaskDuplicateRequest interface.
 */
export function instanceOfTaskDuplicateRequest(value: object): value is TaskDuplicateRequest {
    return true;
}

export function TaskDuplicateRequestFromJSON(json: any): TaskDuplicateRequest {
    return TaskDuplicateRequestFromJSONTyped(json, false);
}

export function TaskDuplicateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskDuplicateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'include': json['include'] == null ? undefined : json['include'],
    };
}

export function TaskDuplicateRequestToJSON(json: any): TaskDuplicateRequest {
    return TaskDuplicateRequestToJSONTyped(json, false);
}

export function TaskDuplicateRequestToJSONTyped(value?: TaskDuplicateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'include': value['include'],
    };
}

