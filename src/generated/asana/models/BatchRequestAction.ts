/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { BatchRequestActionOptions } from './BatchRequestActionOptions.js';
import {
    BatchRequestActionOptionsFromJSON,
    BatchRequestActionOptionsFromJSONTyped,
    BatchRequestActionOptionsToJSON,
    BatchRequestActionOptionsToJSONTyped,
} from './BatchRequestActionOptions.js';

/**
 * An action object for use in a batch request.
 * @export
 * @interface BatchRequestAction
 */
export interface BatchRequestAction {
    /**
     * The path of the desired endpoint relative to the APIâ€™s base URL. Query parameters are not accepted here; put them in `data` instead.
     * @type {string}
     * @memberof BatchRequestAction
     */
    relativePath: string;
    /**
     * The HTTP method you wish to emulate for the action.
     * @type {string}
     * @memberof BatchRequestAction
     */
    method: BatchRequestActionMethodEnum;
    /**
     * For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
     * @type {object}
     * @memberof BatchRequestAction
     */
    data?: object;
    /**
     * 
     * @type {BatchRequestActionOptions}
     * @memberof BatchRequestAction
     */
    options?: BatchRequestActionOptions;
}


/**
 * @export
 */
export const BatchRequestActionMethodEnum = {
    Get: 'get',
    Post: 'post',
    Put: 'put',
    Delete: 'delete',
    Patch: 'patch',
    Head: 'head'
} as const;
export type BatchRequestActionMethodEnum = typeof BatchRequestActionMethodEnum[keyof typeof BatchRequestActionMethodEnum];


/**
 * Check if a given object implements the BatchRequestAction interface.
 */
export function instanceOfBatchRequestAction(value: object): value is BatchRequestAction {
    if (!('relativePath' in value) || value['relativePath'] === undefined) return false;
    if (!('method' in value) || value['method'] === undefined) return false;
    return true;
}

export function BatchRequestActionFromJSON(json: any): BatchRequestAction {
    return BatchRequestActionFromJSONTyped(json, false);
}

export function BatchRequestActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchRequestAction {
    if (json == null) {
        return json;
    }
    return {
        
        'relativePath': json['relative_path'],
        'method': json['method'],
        'data': json['data'] == null ? undefined : json['data'],
        'options': json['options'] == null ? undefined : BatchRequestActionOptionsFromJSON(json['options']),
    };
}

export function BatchRequestActionToJSON(json: any): BatchRequestAction {
    return BatchRequestActionToJSONTyped(json, false);
}

export function BatchRequestActionToJSONTyped(value?: BatchRequestAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'relative_path': value['relativePath'],
        'method': value['method'],
        'data': value['data'],
        'options': BatchRequestActionOptionsToJSON(value['options']),
    };
}

