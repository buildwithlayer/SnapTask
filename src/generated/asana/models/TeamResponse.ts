/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TeamResponseAllOfOrganization } from './TeamResponseAllOfOrganization.js';
import {
    TeamResponseAllOfOrganizationFromJSON,
    TeamResponseAllOfOrganizationFromJSONTyped,
    TeamResponseAllOfOrganizationToJSON,
    TeamResponseAllOfOrganizationToJSONTyped,
} from './TeamResponseAllOfOrganization.js';

/**
 * 
 * @export
 * @interface TeamResponse
 */
export interface TeamResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof TeamResponse
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof TeamResponse
     */
    readonly resourceType?: string;
    /**
     * The name of the team.
     * @type {string}
     * @memberof TeamResponse
     */
    name?: string;
    /**
     * [Opt In](/docs/inputoutput-options). The description of the team.
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    description?: string;
    /**
     * [Opt In](/docs/inputoutput-options). The description of the team with formatting as HTML.
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    htmlDescription?: string;
    /**
     * 
     * @type {TeamResponseAllOfOrganization}
     * @memberof TeamResponse
     */
    organization?: TeamResponseAllOfOrganization;
    /**
     * A url that points directly to the object within Asana.
     * @type {string}
     * @memberof TeamResponse
     */
    readonly permalinkUrl?: string;
    /**
     * The visibility of the team to users in the same organization
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    visibility?: TeamResponseVisibilityEnum;
    /**
     * Controls who can edit team name and description
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    editTeamNameOrDescriptionAccessLevel?: TeamResponseEditTeamNameOrDescriptionAccessLevelEnum;
    /**
     * Controls who can edit team visibility and trash teams
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    editTeamVisibilityOrTrashTeamAccessLevel?: TeamResponseEditTeamVisibilityOrTrashTeamAccessLevelEnum;
    /**
     * Controls who can accept or deny member invites for a given team
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    memberInviteManagementAccessLevel?: TeamResponseMemberInviteManagementAccessLevelEnum;
    /**
     * Controls who can accept or deny guest invites for a given team
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    guestInviteManagementAccessLevel?: TeamResponseGuestInviteManagementAccessLevelEnum;
    /**
     * Controls who can accept or deny join team requests for a Membership by Request team. This field can only be updated when the team's `visibility` field is `request_to_join`.
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    joinRequestManagementAccessLevel?: TeamResponseJoinRequestManagementAccessLevelEnum;
    /**
     * Controls who can remove team members
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    teamMemberRemovalAccessLevel?: TeamResponseTeamMemberRemovalAccessLevelEnum;
    /**
     * Controls who can create and share content with the team
     * 
     * @type {string}
     * @memberof TeamResponse
     */
    teamContentManagementAccessLevel?: TeamResponseTeamContentManagementAccessLevelEnum;
    /**
     * Whether the team has been endorsed
     * 
     * @type {boolean}
     * @memberof TeamResponse
     */
    endorsed?: boolean;
}


/**
 * @export
 */
export const TeamResponseVisibilityEnum = {
    Secret: 'secret',
    RequestToJoin: 'request_to_join',
    Public: 'public'
} as const;
export type TeamResponseVisibilityEnum = typeof TeamResponseVisibilityEnum[keyof typeof TeamResponseVisibilityEnum];

/**
 * @export
 */
export const TeamResponseEditTeamNameOrDescriptionAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseEditTeamNameOrDescriptionAccessLevelEnum = typeof TeamResponseEditTeamNameOrDescriptionAccessLevelEnum[keyof typeof TeamResponseEditTeamNameOrDescriptionAccessLevelEnum];

/**
 * @export
 */
export const TeamResponseEditTeamVisibilityOrTrashTeamAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseEditTeamVisibilityOrTrashTeamAccessLevelEnum = typeof TeamResponseEditTeamVisibilityOrTrashTeamAccessLevelEnum[keyof typeof TeamResponseEditTeamVisibilityOrTrashTeamAccessLevelEnum];

/**
 * @export
 */
export const TeamResponseMemberInviteManagementAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseMemberInviteManagementAccessLevelEnum = typeof TeamResponseMemberInviteManagementAccessLevelEnum[keyof typeof TeamResponseMemberInviteManagementAccessLevelEnum];

/**
 * @export
 */
export const TeamResponseGuestInviteManagementAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseGuestInviteManagementAccessLevelEnum = typeof TeamResponseGuestInviteManagementAccessLevelEnum[keyof typeof TeamResponseGuestInviteManagementAccessLevelEnum];

/**
 * @export
 */
export const TeamResponseJoinRequestManagementAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseJoinRequestManagementAccessLevelEnum = typeof TeamResponseJoinRequestManagementAccessLevelEnum[keyof typeof TeamResponseJoinRequestManagementAccessLevelEnum];

/**
 * @export
 */
export const TeamResponseTeamMemberRemovalAccessLevelEnum = {
    AllTeamMembers: 'all_team_members',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseTeamMemberRemovalAccessLevelEnum = typeof TeamResponseTeamMemberRemovalAccessLevelEnum[keyof typeof TeamResponseTeamMemberRemovalAccessLevelEnum];

/**
 * @export
 */
export const TeamResponseTeamContentManagementAccessLevelEnum = {
    NoRestriction: 'no_restriction',
    OnlyTeamAdmins: 'only_team_admins'
} as const;
export type TeamResponseTeamContentManagementAccessLevelEnum = typeof TeamResponseTeamContentManagementAccessLevelEnum[keyof typeof TeamResponseTeamContentManagementAccessLevelEnum];


/**
 * Check if a given object implements the TeamResponse interface.
 */
export function instanceOfTeamResponse(value: object): value is TeamResponse {
    return true;
}

export function TeamResponseFromJSON(json: any): TeamResponse {
    return TeamResponseFromJSONTyped(json, false);
}

export function TeamResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'htmlDescription': json['html_description'] == null ? undefined : json['html_description'],
        'organization': json['organization'] == null ? undefined : TeamResponseAllOfOrganizationFromJSON(json['organization']),
        'permalinkUrl': json['permalink_url'] == null ? undefined : json['permalink_url'],
        'visibility': json['visibility'] == null ? undefined : json['visibility'],
        'editTeamNameOrDescriptionAccessLevel': json['edit_team_name_or_description_access_level'] == null ? undefined : json['edit_team_name_or_description_access_level'],
        'editTeamVisibilityOrTrashTeamAccessLevel': json['edit_team_visibility_or_trash_team_access_level'] == null ? undefined : json['edit_team_visibility_or_trash_team_access_level'],
        'memberInviteManagementAccessLevel': json['member_invite_management_access_level'] == null ? undefined : json['member_invite_management_access_level'],
        'guestInviteManagementAccessLevel': json['guest_invite_management_access_level'] == null ? undefined : json['guest_invite_management_access_level'],
        'joinRequestManagementAccessLevel': json['join_request_management_access_level'] == null ? undefined : json['join_request_management_access_level'],
        'teamMemberRemovalAccessLevel': json['team_member_removal_access_level'] == null ? undefined : json['team_member_removal_access_level'],
        'teamContentManagementAccessLevel': json['team_content_management_access_level'] == null ? undefined : json['team_content_management_access_level'],
        'endorsed': json['endorsed'] == null ? undefined : json['endorsed'],
    };
}

export function TeamResponseToJSON(json: any): TeamResponse {
    return TeamResponseToJSONTyped(json, false);
}

export function TeamResponseToJSONTyped(value?: Omit<TeamResponse, 'gid'|'resource_type'|'permalink_url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'html_description': value['htmlDescription'],
        'organization': TeamResponseAllOfOrganizationToJSON(value['organization']),
        'visibility': value['visibility'],
        'edit_team_name_or_description_access_level': value['editTeamNameOrDescriptionAccessLevel'],
        'edit_team_visibility_or_trash_team_access_level': value['editTeamVisibilityOrTrashTeamAccessLevel'],
        'member_invite_management_access_level': value['memberInviteManagementAccessLevel'],
        'guest_invite_management_access_level': value['guestInviteManagementAccessLevel'],
        'join_request_management_access_level': value['joinRequestManagementAccessLevel'],
        'team_member_removal_access_level': value['teamMemberRemovalAccessLevel'],
        'team_content_management_access_level': value['teamContentManagementAccessLevel'],
        'endorsed': value['endorsed'],
    };
}

