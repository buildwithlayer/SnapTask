/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface DateVariableRequest
 */
export interface DateVariableRequest {
    /**
     * Globally unique identifier of the date field in the project template. A value of `1` refers to the project start date, while `2` refers to the project due date.
     * @type {string}
     * @memberof DateVariableRequest
     */
    gid?: string;
    /**
     * The date with which the date variable should be replaced when instantiating a project. This takes a date with `YYYY-MM-DD` format.
     * @type {Date}
     * @memberof DateVariableRequest
     */
    value?: Date | null;
}

/**
 * Check if a given object implements the DateVariableRequest interface.
 */
export function instanceOfDateVariableRequest(value: object): value is DateVariableRequest {
    return true;
}

export function DateVariableRequestFromJSON(json: any): DateVariableRequest {
    return DateVariableRequestFromJSONTyped(json, false);
}

export function DateVariableRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateVariableRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'value': json['value'] == null ? undefined : (new Date(json['value'])),
    };
}

export function DateVariableRequestToJSON(json: any): DateVariableRequest {
    return DateVariableRequestToJSONTyped(json, false);
}

export function DateVariableRequestToJSONTyped(value?: DateVariableRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gid': value['gid'],
        'value': value['value'] === null ? null : ((value['value'] as any)?.toISOString()),
    };
}

