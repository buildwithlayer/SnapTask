/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ProjectCompact } from './ProjectCompact.js';
import {
    ProjectCompactFromJSON,
    ProjectCompactFromJSONTyped,
    ProjectCompactToJSON,
    ProjectCompactToJSONTyped,
} from './ProjectCompact.js';
import type { TaskCompact } from './TaskCompact.js';
import {
    TaskCompactFromJSON,
    TaskCompactFromJSONTyped,
    TaskCompactToJSON,
    TaskCompactToJSONTyped,
} from './TaskCompact.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';

/**
 * 
 * @export
 * @interface TimeTrackingEntryBase
 */
export interface TimeTrackingEntryBase {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof TimeTrackingEntryBase
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof TimeTrackingEntryBase
     */
    readonly resourceType?: string;
    /**
     * Time in minutes tracked by the entry.
     * @type {number}
     * @memberof TimeTrackingEntryBase
     */
    durationMinutes?: number;
    /**
     * The day that this entry is logged on.
     * @type {Date}
     * @memberof TimeTrackingEntryBase
     */
    enteredOn?: Date;
    /**
     * 
     * @type {ProjectCompact}
     * @memberof TimeTrackingEntryBase
     */
    attributableTo?: ProjectCompact;
    /**
     * 
     * @type {UserCompact}
     * @memberof TimeTrackingEntryBase
     */
    createdBy?: UserCompact;
    /**
     * 
     * @type {TaskCompact}
     * @memberof TimeTrackingEntryBase
     */
    task?: TaskCompact;
    /**
     * The time at which this resource was created.
     * @type {Date}
     * @memberof TimeTrackingEntryBase
     */
    readonly createdAt?: Date;
    /**
     * *Optional*. The current approval status of the entry.
     * @type {string}
     * @memberof TimeTrackingEntryBase
     */
    readonly approvalStatus?: TimeTrackingEntryBaseApprovalStatusEnum;
    /**
     * *Optional*. The current billable status of the entry.
     * @type {string}
     * @memberof TimeTrackingEntryBase
     */
    readonly billableStatus?: TimeTrackingEntryBaseBillableStatusEnum;
    /**
     * *Optional*. The description of the entry.
     * @type {string}
     * @memberof TimeTrackingEntryBase
     */
    readonly description?: string;
}


/**
 * @export
 */
export const TimeTrackingEntryBaseApprovalStatusEnum = {
    Draft: 'DRAFT',
    Submitted: 'SUBMITTED',
    Approved: 'APPROVED',
    Rejected: 'REJECTED'
} as const;
export type TimeTrackingEntryBaseApprovalStatusEnum = typeof TimeTrackingEntryBaseApprovalStatusEnum[keyof typeof TimeTrackingEntryBaseApprovalStatusEnum];

/**
 * @export
 */
export const TimeTrackingEntryBaseBillableStatusEnum = {
    Billable: 'billable',
    NonBillable: 'nonBillable',
    NotApplicable: 'notApplicable'
} as const;
export type TimeTrackingEntryBaseBillableStatusEnum = typeof TimeTrackingEntryBaseBillableStatusEnum[keyof typeof TimeTrackingEntryBaseBillableStatusEnum];


/**
 * Check if a given object implements the TimeTrackingEntryBase interface.
 */
export function instanceOfTimeTrackingEntryBase(value: object): value is TimeTrackingEntryBase {
    return true;
}

export function TimeTrackingEntryBaseFromJSON(json: any): TimeTrackingEntryBase {
    return TimeTrackingEntryBaseFromJSONTyped(json, false);
}

export function TimeTrackingEntryBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeTrackingEntryBase {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'durationMinutes': json['duration_minutes'] == null ? undefined : json['duration_minutes'],
        'enteredOn': json['entered_on'] == null ? undefined : (new Date(json['entered_on'])),
        'attributableTo': json['attributable_to'] == null ? undefined : json['attributable_to'],
        'createdBy': json['created_by'] == null ? undefined : UserCompactFromJSON(json['created_by']),
        'task': json['task'] == null ? undefined : TaskCompactFromJSON(json['task']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'approvalStatus': json['approval_status'] == null ? undefined : json['approval_status'],
        'billableStatus': json['billable_status'] == null ? undefined : json['billable_status'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function TimeTrackingEntryBaseToJSON(json: any): TimeTrackingEntryBase {
    return TimeTrackingEntryBaseToJSONTyped(json, false);
}

export function TimeTrackingEntryBaseToJSONTyped(value?: Omit<TimeTrackingEntryBase, 'gid'|'resource_type'|'created_at'|'approval_status'|'billable_status'|'description'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'duration_minutes': value['durationMinutes'],
        'entered_on': value['enteredOn'] == null ? undefined : ((value['enteredOn']).toISOString().substring(0,10)),
        'attributable_to': value['attributableTo'],
        'created_by': UserCompactToJSON(value['createdBy']),
        'task': TaskCompactToJSON(value['task']),
    };
}

