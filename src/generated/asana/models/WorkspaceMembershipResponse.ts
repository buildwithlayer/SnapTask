/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { UserTaskListCompact } from './UserTaskListCompact.js';
import {
    UserTaskListCompactFromJSON,
    UserTaskListCompactFromJSONTyped,
    UserTaskListCompactToJSON,
    UserTaskListCompactToJSONTyped,
} from './UserTaskListCompact.js';
import type { WorkspaceCompact } from './WorkspaceCompact.js';
import {
    WorkspaceCompactFromJSON,
    WorkspaceCompactFromJSONTyped,
    WorkspaceCompactToJSON,
    WorkspaceCompactToJSONTyped,
} from './WorkspaceCompact.js';
import type { UserCompact } from './UserCompact.js';
import {
    UserCompactFromJSON,
    UserCompactFromJSONTyped,
    UserCompactToJSON,
    UserCompactToJSONTyped,
} from './UserCompact.js';
import type { WorkspaceMembershipResponseAllOfVacationDates } from './WorkspaceMembershipResponseAllOfVacationDates.js';
import {
    WorkspaceMembershipResponseAllOfVacationDatesFromJSON,
    WorkspaceMembershipResponseAllOfVacationDatesFromJSONTyped,
    WorkspaceMembershipResponseAllOfVacationDatesToJSON,
    WorkspaceMembershipResponseAllOfVacationDatesToJSONTyped,
} from './WorkspaceMembershipResponseAllOfVacationDates.js';

/**
 * 
 * @export
 * @interface WorkspaceMembershipResponse
 */
export interface WorkspaceMembershipResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof WorkspaceMembershipResponse
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof WorkspaceMembershipResponse
     */
    readonly resourceType?: string;
    /**
     * 
     * @type {UserCompact}
     * @memberof WorkspaceMembershipResponse
     */
    user?: UserCompact;
    /**
     * 
     * @type {WorkspaceCompact}
     * @memberof WorkspaceMembershipResponse
     */
    workspace?: WorkspaceCompact;
    /**
     * 
     * @type {UserTaskListCompact}
     * @memberof WorkspaceMembershipResponse
     */
    userTaskList?: UserTaskListCompact;
    /**
     * Indicates whether the user is currently associated with the workspace. Returns `true` for users who have joined the workspace or have been invited but not yet accepted.
     * @type {boolean}
     * @memberof WorkspaceMembershipResponse
     */
    readonly isActive?: boolean;
    /**
     * Reflects if this user is an admin of the workspace.
     * @type {boolean}
     * @memberof WorkspaceMembershipResponse
     */
    readonly isAdmin?: boolean;
    /**
     * Reflects if this user is a guest of the workspace.
     * @type {boolean}
     * @memberof WorkspaceMembershipResponse
     */
    readonly isGuest?: boolean;
    /**
     * Reflects if this user has view only license in the workspace.
     * @type {boolean}
     * @memberof WorkspaceMembershipResponse
     */
    readonly isViewOnly?: boolean;
    /**
     * 
     * @type {WorkspaceMembershipResponseAllOfVacationDates}
     * @memberof WorkspaceMembershipResponse
     */
    vacationDates?: WorkspaceMembershipResponseAllOfVacationDates | null;
    /**
     * The time at which this resource was created.
     * @type {Date}
     * @memberof WorkspaceMembershipResponse
     */
    readonly createdAt?: Date;
}

/**
 * Check if a given object implements the WorkspaceMembershipResponse interface.
 */
export function instanceOfWorkspaceMembershipResponse(value: object): value is WorkspaceMembershipResponse {
    return true;
}

export function WorkspaceMembershipResponseFromJSON(json: any): WorkspaceMembershipResponse {
    return WorkspaceMembershipResponseFromJSONTyped(json, false);
}

export function WorkspaceMembershipResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceMembershipResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'user': json['user'] == null ? undefined : UserCompactFromJSON(json['user']),
        'workspace': json['workspace'] == null ? undefined : WorkspaceCompactFromJSON(json['workspace']),
        'userTaskList': json['user_task_list'] == null ? undefined : UserTaskListCompactFromJSON(json['user_task_list']),
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'isAdmin': json['is_admin'] == null ? undefined : json['is_admin'],
        'isGuest': json['is_guest'] == null ? undefined : json['is_guest'],
        'isViewOnly': json['is_view_only'] == null ? undefined : json['is_view_only'],
        'vacationDates': json['vacation_dates'] == null ? undefined : WorkspaceMembershipResponseAllOfVacationDatesFromJSON(json['vacation_dates']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
    };
}

export function WorkspaceMembershipResponseToJSON(json: any): WorkspaceMembershipResponse {
    return WorkspaceMembershipResponseToJSONTyped(json, false);
}

export function WorkspaceMembershipResponseToJSONTyped(value?: Omit<WorkspaceMembershipResponse, 'gid'|'resource_type'|'is_active'|'is_admin'|'is_guest'|'is_view_only'|'created_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': UserCompactToJSON(value['user']),
        'workspace': WorkspaceCompactToJSON(value['workspace']),
        'user_task_list': UserTaskListCompactToJSON(value['userTaskList']),
        'vacation_dates': WorkspaceMembershipResponseAllOfVacationDatesToJSON(value['vacationDates']),
    };
}

