/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GoalResponseAllOfMetric
 */
export interface GoalResponseAllOfMetric {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    readonly resourceType?: string;
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    readonly resourceSubtype?: GoalResponseAllOfMetricResourceSubtypeEnum;
    /**
     * *Conditional*. Only relevant for goal metrics of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
     * For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
     * @type {number}
     * @memberof GoalResponseAllOfMetric
     */
    precision?: number;
    /**
     * A supported unit of measure for the goal metric, or none.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    unit?: GoalResponseAllOfMetricUnitEnum;
    /**
     * ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    currencyCode?: string | null;
    /**
     * This number is the start value of a goal metric of type number.
     * @type {number}
     * @memberof GoalResponseAllOfMetric
     */
    initialNumberValue?: number;
    /**
     * This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.
     * @type {number}
     * @memberof GoalResponseAllOfMetric
     */
    targetNumberValue?: number;
    /**
     * This number is the current value of a goal metric of type number.
     * @type {number}
     * @memberof GoalResponseAllOfMetric
     */
    currentNumberValue?: number;
    /**
     * This string is the current value of a goal metric of type string.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    readonly currentDisplayValue?: string;
    /**
     * This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, calculated automatically from contributing subgoals, projects, or tasks, or managed by an integration with an external data source, such as Salesforce.
     * @type {string}
     * @memberof GoalResponseAllOfMetric
     */
    progressSource?: GoalResponseAllOfMetricProgressSourceEnum;
    /**
     * *Conditional*. Only relevant if `metric.progress_source` is one of `subgoal_progress`, `project_task_completion`, `project_milestone_completion`, or `task_completion`. If true, we use the supporting object's custom weight to calculate the goal's progress. If false, we treat all supporting objects as equally weighted
     * @type {boolean}
     * @memberof GoalResponseAllOfMetric
     */
    isCustomWeight?: boolean;
    /**
     * *Conditional*. Only relevant for `progress_source` of type `external`. This boolean indicates whether the requester has the ability to update the current value of this metric. This returns `true` if the external metric was created by the requester, `false` otherwise.
     * @type {boolean}
     * @memberof GoalResponseAllOfMetric
     */
    readonly canManage?: boolean;
}


/**
 * @export
 */
export const GoalResponseAllOfMetricResourceSubtypeEnum = {
    Number: 'number'
} as const;
export type GoalResponseAllOfMetricResourceSubtypeEnum = typeof GoalResponseAllOfMetricResourceSubtypeEnum[keyof typeof GoalResponseAllOfMetricResourceSubtypeEnum];

/**
 * @export
 */
export const GoalResponseAllOfMetricUnitEnum = {
    None: 'none',
    Currency: 'currency',
    Percentage: 'percentage'
} as const;
export type GoalResponseAllOfMetricUnitEnum = typeof GoalResponseAllOfMetricUnitEnum[keyof typeof GoalResponseAllOfMetricUnitEnum];

/**
 * @export
 */
export const GoalResponseAllOfMetricProgressSourceEnum = {
    Manual: 'manual',
    SubgoalProgress: 'subgoal_progress',
    ProjectTaskCompletion: 'project_task_completion',
    ProjectMilestoneCompletion: 'project_milestone_completion',
    TaskCompletion: 'task_completion',
    External: 'external'
} as const;
export type GoalResponseAllOfMetricProgressSourceEnum = typeof GoalResponseAllOfMetricProgressSourceEnum[keyof typeof GoalResponseAllOfMetricProgressSourceEnum];


/**
 * Check if a given object implements the GoalResponseAllOfMetric interface.
 */
export function instanceOfGoalResponseAllOfMetric(value: object): value is GoalResponseAllOfMetric {
    return true;
}

export function GoalResponseAllOfMetricFromJSON(json: any): GoalResponseAllOfMetric {
    return GoalResponseAllOfMetricFromJSONTyped(json, false);
}

export function GoalResponseAllOfMetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): GoalResponseAllOfMetric {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'precision': json['precision'] == null ? undefined : json['precision'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'currencyCode': json['currency_code'] == null ? undefined : json['currency_code'],
        'initialNumberValue': json['initial_number_value'] == null ? undefined : json['initial_number_value'],
        'targetNumberValue': json['target_number_value'] == null ? undefined : json['target_number_value'],
        'currentNumberValue': json['current_number_value'] == null ? undefined : json['current_number_value'],
        'currentDisplayValue': json['current_display_value'] == null ? undefined : json['current_display_value'],
        'progressSource': json['progress_source'] == null ? undefined : json['progress_source'],
        'isCustomWeight': json['is_custom_weight'] == null ? undefined : json['is_custom_weight'],
        'canManage': json['can_manage'] == null ? undefined : json['can_manage'],
    };
}

export function GoalResponseAllOfMetricToJSON(json: any): GoalResponseAllOfMetric {
    return GoalResponseAllOfMetricToJSONTyped(json, false);
}

export function GoalResponseAllOfMetricToJSONTyped(value?: Omit<GoalResponseAllOfMetric, 'gid'|'resource_type'|'resource_subtype'|'current_display_value'|'can_manage'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'precision': value['precision'],
        'unit': value['unit'],
        'currency_code': value['currencyCode'],
        'initial_number_value': value['initialNumberValue'],
        'target_number_value': value['targetNumberValue'],
        'current_number_value': value['currentNumberValue'],
        'progress_source': value['progressSource'],
        'is_custom_weight': value['isCustomWeight'],
    };
}

