/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { MemberCompact } from './MemberCompact.js';
import {
    MemberCompactFromJSON,
    MemberCompactFromJSONTyped,
    MemberCompactToJSON,
    MemberCompactToJSONTyped,
} from './MemberCompact.js';
import type { CustomFieldCompact } from './CustomFieldCompact.js';
import {
    CustomFieldCompactFromJSON,
    CustomFieldCompactFromJSONTyped,
    CustomFieldCompactToJSON,
    CustomFieldCompactToJSONTyped,
} from './CustomFieldCompact.js';

/**
 * This object describes a user or team's membership to a custom field including their level of access (Admin, Editor, or User).
 * @export
 * @interface CustomFieldMembershipCompact
 */
export interface CustomFieldMembershipCompact {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof CustomFieldMembershipCompact
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof CustomFieldMembershipCompact
     */
    readonly resourceType?: string;
    /**
     * Type of the membership.
     * @type {string}
     * @memberof CustomFieldMembershipCompact
     */
    resourceSubtype?: string;
    /**
     * 
     * @type {CustomFieldCompact}
     * @memberof CustomFieldMembershipCompact
     */
    parent?: CustomFieldCompact;
    /**
     * 
     * @type {MemberCompact}
     * @memberof CustomFieldMembershipCompact
     */
    member?: MemberCompact;
    /**
     * Whether the member has admin, editor, or user access to the custom field.
     * @type {string}
     * @memberof CustomFieldMembershipCompact
     */
    readonly accessLevel?: CustomFieldMembershipCompactAccessLevelEnum;
}


/**
 * @export
 */
export const CustomFieldMembershipCompactAccessLevelEnum = {
    Admin: 'admin',
    Editor: 'editor',
    User: 'user'
} as const;
export type CustomFieldMembershipCompactAccessLevelEnum = typeof CustomFieldMembershipCompactAccessLevelEnum[keyof typeof CustomFieldMembershipCompactAccessLevelEnum];


/**
 * Check if a given object implements the CustomFieldMembershipCompact interface.
 */
export function instanceOfCustomFieldMembershipCompact(value: object): value is CustomFieldMembershipCompact {
    return true;
}

export function CustomFieldMembershipCompactFromJSON(json: any): CustomFieldMembershipCompact {
    return CustomFieldMembershipCompactFromJSONTyped(json, false);
}

export function CustomFieldMembershipCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomFieldMembershipCompact {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'resourceSubtype': json['resource_subtype'] == null ? undefined : json['resource_subtype'],
        'parent': json['parent'] == null ? undefined : CustomFieldCompactFromJSON(json['parent']),
        'member': json['member'] == null ? undefined : MemberCompactFromJSON(json['member']),
        'accessLevel': json['access_level'] == null ? undefined : json['access_level'],
    };
}

export function CustomFieldMembershipCompactToJSON(json: any): CustomFieldMembershipCompact {
    return CustomFieldMembershipCompactToJSONTyped(json, false);
}

export function CustomFieldMembershipCompactToJSONTyped(value?: Omit<CustomFieldMembershipCompact, 'gid'|'resource_type'|'access_level'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource_subtype': value['resourceSubtype'],
        'parent': CustomFieldCompactToJSON(value['parent']),
        'member': MemberCompactToJSON(value['member']),
    };
}

