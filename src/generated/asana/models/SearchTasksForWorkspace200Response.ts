/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TaskCompact } from './TaskCompact.js';
import {
    TaskCompactFromJSON,
    TaskCompactFromJSONTyped,
    TaskCompactToJSON,
    TaskCompactToJSONTyped,
} from './TaskCompact.js';

/**
 * 
 * @export
 * @interface SearchTasksForWorkspace200Response
 */
export interface SearchTasksForWorkspace200Response {
    /**
     * 
     * @type {Array<TaskCompact>}
     * @memberof SearchTasksForWorkspace200Response
     */
    data?: Array<TaskCompact>;
}

/**
 * Check if a given object implements the SearchTasksForWorkspace200Response interface.
 */
export function instanceOfSearchTasksForWorkspace200Response(value: object): value is SearchTasksForWorkspace200Response {
    return true;
}

export function SearchTasksForWorkspace200ResponseFromJSON(json: any): SearchTasksForWorkspace200Response {
    return SearchTasksForWorkspace200ResponseFromJSONTyped(json, false);
}

export function SearchTasksForWorkspace200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTasksForWorkspace200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(TaskCompactFromJSON)),
    };
}

export function SearchTasksForWorkspace200ResponseToJSON(json: any): SearchTasksForWorkspace200Response {
    return SearchTasksForWorkspace200ResponseToJSONTyped(json, false);
}

export function SearchTasksForWorkspace200ResponseToJSONTyped(value?: SearchTasksForWorkspace200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(TaskCompactToJSON)),
    };
}

