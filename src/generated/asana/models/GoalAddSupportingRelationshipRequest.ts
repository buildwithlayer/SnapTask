/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GoalAddSupportingRelationshipRequest
 */
export interface GoalAddSupportingRelationshipRequest {
    /**
     * The gid of the supporting resource to add to the parent goal. Must be the gid of a goal, project, task, or portfolio.
     * @type {string}
     * @memberof GoalAddSupportingRelationshipRequest
     */
    supportingResource: string;
    /**
     * An id of a subgoal of this parent goal. The new subgoal will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified. Currently only supported when adding a subgoal.
     * @type {string}
     * @memberof GoalAddSupportingRelationshipRequest
     */
    insertBefore?: string;
    /**
     * An id of a subgoal of this parent goal. The new subgoal will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified. Currently only supported when adding a subgoal.
     * @type {string}
     * @memberof GoalAddSupportingRelationshipRequest
     */
    insertAfter?: string;
    /**
     * The weight that the supporting resource's progress will contribute to the supported goal's progress. This can be 0, 1, or any value in between.
     * @type {number}
     * @memberof GoalAddSupportingRelationshipRequest
     */
    contributionWeight?: number;
}

/**
 * Check if a given object implements the GoalAddSupportingRelationshipRequest interface.
 */
export function instanceOfGoalAddSupportingRelationshipRequest(value: object): value is GoalAddSupportingRelationshipRequest {
    if (!('supportingResource' in value) || value['supportingResource'] === undefined) return false;
    return true;
}

export function GoalAddSupportingRelationshipRequestFromJSON(json: any): GoalAddSupportingRelationshipRequest {
    return GoalAddSupportingRelationshipRequestFromJSONTyped(json, false);
}

export function GoalAddSupportingRelationshipRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GoalAddSupportingRelationshipRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'supportingResource': json['supporting_resource'],
        'insertBefore': json['insert_before'] == null ? undefined : json['insert_before'],
        'insertAfter': json['insert_after'] == null ? undefined : json['insert_after'],
        'contributionWeight': json['contribution_weight'] == null ? undefined : json['contribution_weight'],
    };
}

export function GoalAddSupportingRelationshipRequestToJSON(json: any): GoalAddSupportingRelationshipRequest {
    return GoalAddSupportingRelationshipRequestToJSONTyped(json, false);
}

export function GoalAddSupportingRelationshipRequestToJSONTyped(value?: GoalAddSupportingRelationshipRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'supporting_resource': value['supportingResource'],
        'insert_before': value['insertBefore'],
        'insert_after': value['insertAfter'],
        'contribution_weight': value['contributionWeight'],
    };
}

