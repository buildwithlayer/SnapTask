/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TimePeriodCompact } from './TimePeriodCompact.js';
import {
    TimePeriodCompactFromJSON,
    TimePeriodCompactFromJSONTyped,
    TimePeriodCompactToJSON,
    TimePeriodCompactToJSONTyped,
} from './TimePeriodCompact.js';

/**
 * 
 * @export
 * @interface TimePeriodBase
 */
export interface TimePeriodBase {
    /**
     * Globally unique identifier of the resource, as a string.
     * @type {string}
     * @memberof TimePeriodBase
     */
    readonly gid?: string;
    /**
     * The base type of this resource.
     * @type {string}
     * @memberof TimePeriodBase
     */
    readonly resourceType?: string;
    /**
     * The localized end date of the time period in `YYYY-MM-DD` format.
     * @type {string}
     * @memberof TimePeriodBase
     */
    endOn?: string;
    /**
     * The localized start date of the time period in `YYYY-MM-DD` format.
     * @type {string}
     * @memberof TimePeriodBase
     */
    startOn?: string;
    /**
     * The cadence and index of the time period.
     * @type {string}
     * @memberof TimePeriodBase
     */
    period?: TimePeriodBasePeriodEnum;
    /**
     * A string representing the cadence code and the fiscal year.
     * @type {string}
     * @memberof TimePeriodBase
     */
    displayName?: string;
    /**
     * 
     * @type {TimePeriodCompact}
     * @memberof TimePeriodBase
     */
    parent?: TimePeriodCompact | null;
}


/**
 * @export
 */
export const TimePeriodBasePeriodEnum = {
    Fy: 'FY',
    H1: 'H1',
    H2: 'H2',
    Q1: 'Q1',
    Q2: 'Q2',
    Q3: 'Q3',
    Q4: 'Q4'
} as const;
export type TimePeriodBasePeriodEnum = typeof TimePeriodBasePeriodEnum[keyof typeof TimePeriodBasePeriodEnum];


/**
 * Check if a given object implements the TimePeriodBase interface.
 */
export function instanceOfTimePeriodBase(value: object): value is TimePeriodBase {
    return true;
}

export function TimePeriodBaseFromJSON(json: any): TimePeriodBase {
    return TimePeriodBaseFromJSONTyped(json, false);
}

export function TimePeriodBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimePeriodBase {
    if (json == null) {
        return json;
    }
    return {
        
        'gid': json['gid'] == null ? undefined : json['gid'],
        'resourceType': json['resource_type'] == null ? undefined : json['resource_type'],
        'endOn': json['end_on'] == null ? undefined : json['end_on'],
        'startOn': json['start_on'] == null ? undefined : json['start_on'],
        'period': json['period'] == null ? undefined : json['period'],
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
        'parent': json['parent'] == null ? undefined : TimePeriodCompactFromJSON(json['parent']),
    };
}

export function TimePeriodBaseToJSON(json: any): TimePeriodBase {
    return TimePeriodBaseToJSONTyped(json, false);
}

export function TimePeriodBaseToJSONTyped(value?: Omit<TimePeriodBase, 'gid'|'resource_type'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'end_on': value['endOn'],
        'start_on': value['startOn'],
        'period': value['period'],
        'display_name': value['displayName'],
        'parent': TimePeriodCompactToJSON(value['parent']),
    };
}

