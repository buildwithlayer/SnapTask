/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * *Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.
 * @export
 * @interface CustomFieldCompactDateValue
 */
export interface CustomFieldCompactDateValue {
    /**
     * A string representing the date in YYYY-MM-DD format.
     * @type {string}
     * @memberof CustomFieldCompactDateValue
     */
    date?: string;
    /**
     * A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.
     * @type {string}
     * @memberof CustomFieldCompactDateValue
     */
    dateTime?: string;
}

/**
 * Check if a given object implements the CustomFieldCompactDateValue interface.
 */
export function instanceOfCustomFieldCompactDateValue(value: object): value is CustomFieldCompactDateValue {
    return true;
}

export function CustomFieldCompactDateValueFromJSON(json: any): CustomFieldCompactDateValue {
    return CustomFieldCompactDateValueFromJSONTyped(json, false);
}

export function CustomFieldCompactDateValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomFieldCompactDateValue {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'] == null ? undefined : json['date'],
        'dateTime': json['date_time'] == null ? undefined : json['date_time'],
    };
}

export function CustomFieldCompactDateValueToJSON(json: any): CustomFieldCompactDateValue {
    return CustomFieldCompactDateValueToJSONTyped(json, false);
}

export function CustomFieldCompactDateValueToJSONTyped(value?: CustomFieldCompactDateValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': value['date'],
        'date_time': value['dateTime'],
    };
}

