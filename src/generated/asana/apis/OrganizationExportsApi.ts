/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  CreateOrganizationExport201Response,
  CreateOrganizationExportRequest,
  ErrorResponse,
} from '../models/index.js';
import {
    CreateOrganizationExport201ResponseFromJSON,
    CreateOrganizationExport201ResponseToJSON,
    CreateOrganizationExportRequestFromJSON,
    CreateOrganizationExportRequestToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models/index.js';

export interface CreateOrganizationExportOperationRequest {
    createOrganizationExportRequest: CreateOrganizationExportRequest;
    optPretty?: boolean;
    optFields?: Array<CreateOrganizationExportOperationOptFieldsEnum>;
}

export interface GetOrganizationExportRequest {
    organizationExportGid: string;
    optPretty?: boolean;
    optFields?: Array<GetOrganizationExportOptFieldsEnum>;
}

/**
 * 
 */
export class OrganizationExportsApi extends runtime.BaseAPI {

    /**
     * This method creates a request to export an Organization. Asana will complete the export at some point after you create the request.
     * Create an organization export request
     */
    async createOrganizationExportRaw(requestParameters: CreateOrganizationExportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateOrganizationExport201Response>> {
        if (requestParameters['createOrganizationExportRequest'] == null) {
            throw new runtime.RequiredError(
                'createOrganizationExportRequest',
                'Required parameter "createOrganizationExportRequest" was null or undefined when calling createOrganizationExport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['optPretty'] != null) {
            queryParameters['opt_pretty'] = requestParameters['optPretty'];
        }

        if (requestParameters['optFields'] != null) {
            queryParameters['opt_fields'] = requestParameters['optFields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("personalAccessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }


        let urlPath = `/organization_exports`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateOrganizationExportRequestToJSON(requestParameters['createOrganizationExportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateOrganizationExport201ResponseFromJSON(jsonValue));
    }

    /**
     * This method creates a request to export an Organization. Asana will complete the export at some point after you create the request.
     * Create an organization export request
     */
    async createOrganizationExport(requestParameters: CreateOrganizationExportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateOrganizationExport201Response> {
        const response = await this.createOrganizationExportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns details of a previously-requested Organization export.
     * Get details on an org export request
     */
    async getOrganizationExportRaw(requestParameters: GetOrganizationExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateOrganizationExport201Response>> {
        if (requestParameters['organizationExportGid'] == null) {
            throw new runtime.RequiredError(
                'organizationExportGid',
                'Required parameter "organizationExportGid" was null or undefined when calling getOrganizationExport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['optPretty'] != null) {
            queryParameters['opt_pretty'] = requestParameters['optPretty'];
        }

        if (requestParameters['optFields'] != null) {
            queryParameters['opt_fields'] = requestParameters['optFields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("personalAccessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }


        let urlPath = `/organization_exports/{organization_export_gid}`;
        urlPath = urlPath.replace(`{${"organization_export_gid"}}`, encodeURIComponent(String(requestParameters['organizationExportGid'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateOrganizationExport201ResponseFromJSON(jsonValue));
    }

    /**
     * Returns details of a previously-requested Organization export.
     * Get details on an org export request
     */
    async getOrganizationExport(requestParameters: GetOrganizationExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateOrganizationExport201Response> {
        const response = await this.getOrganizationExportRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const CreateOrganizationExportOperationOptFieldsEnum = {
    CreatedAt: 'created_at',
    DownloadUrl: 'download_url',
    Organization: 'organization',
    OrganizationName: 'organization.name',
    State: 'state'
} as const;
export type CreateOrganizationExportOperationOptFieldsEnum = typeof CreateOrganizationExportOperationOptFieldsEnum[keyof typeof CreateOrganizationExportOperationOptFieldsEnum];
/**
 * @export
 */
export const GetOrganizationExportOptFieldsEnum = {
    CreatedAt: 'created_at',
    DownloadUrl: 'download_url',
    Organization: 'organization',
    OrganizationName: 'organization.name',
    State: 'state'
} as const;
export type GetOrganizationExportOptFieldsEnum = typeof GetOrganizationExportOptFieldsEnum[keyof typeof GetOrganizationExportOptFieldsEnum];
