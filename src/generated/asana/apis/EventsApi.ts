/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  ErrorResponse,
  GetEvents200Response,
  GetEvents412Response,
} from '../models/index.js';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GetEvents200ResponseFromJSON,
    GetEvents200ResponseToJSON,
    GetEvents412ResponseFromJSON,
    GetEvents412ResponseToJSON,
} from '../models/index.js';

export interface GetEventsRequest {
    resource: string;
    sync?: string;
    optPretty?: boolean;
    optFields?: Array<GetEventsOptFieldsEnum>;
}

/**
 * 
 */
export class EventsApi extends runtime.BaseAPI {

    /**
     * Returns the full record for all events that have occurred since the sync token was created.  A `GET` request to the endpoint `/[path_to_resource]/events` can be made in lieu of including the resource ID in the data for the request.  Asana limits a single sync token to 100 events. If more than 100 events exist for a given resource, `has_more: true` will be returned in the response, indicating that there are more events to pull.  *Note: The resource returned will be the resource that triggered the event. This may be different from the one that the events were requested for. For example, a subscription to a project will contain events for tasks contained within the project.*
     * Get events on a resource
     */
    async getEventsRaw(requestParameters: GetEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetEvents200Response>> {
        if (requestParameters['resource'] == null) {
            throw new runtime.RequiredError(
                'resource',
                'Required parameter "resource" was null or undefined when calling getEvents().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['resource'] != null) {
            queryParameters['resource'] = requestParameters['resource'];
        }

        if (requestParameters['sync'] != null) {
            queryParameters['sync'] = requestParameters['sync'];
        }

        if (requestParameters['optPretty'] != null) {
            queryParameters['opt_pretty'] = requestParameters['optPretty'];
        }

        if (requestParameters['optFields'] != null) {
            queryParameters['opt_fields'] = requestParameters['optFields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("personalAccessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }


        let urlPath = `/events`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetEvents200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the full record for all events that have occurred since the sync token was created.  A `GET` request to the endpoint `/[path_to_resource]/events` can be made in lieu of including the resource ID in the data for the request.  Asana limits a single sync token to 100 events. If more than 100 events exist for a given resource, `has_more: true` will be returned in the response, indicating that there are more events to pull.  *Note: The resource returned will be the resource that triggered the event. This may be different from the one that the events were requested for. For example, a subscription to a project will contain events for tasks contained within the project.*
     * Get events on a resource
     */
    async getEvents(requestParameters: GetEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetEvents200Response> {
        const response = await this.getEventsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetEventsOptFieldsEnum = {
    Action: 'action',
    Change: 'change',
    ChangeAction: 'change.action',
    ChangeAddedValue: 'change.added_value',
    ChangeField: 'change.field',
    ChangeNewValue: 'change.new_value',
    ChangeRemovedValue: 'change.removed_value',
    CreatedAt: 'created_at',
    Parent: 'parent',
    ParentName: 'parent.name',
    Resource: 'resource',
    ResourceName: 'resource.name',
    Type: 'type',
    User: 'user',
    UserName: 'user.name'
} as const;
export type GetEventsOptFieldsEnum = typeof GetEventsOptFieldsEnum[keyof typeof GetEventsOptFieldsEnum];
