/* tslint:disable */
/* eslint-disable */
/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  ErrorResponse,
  GetJob200Response,
} from '../models/index.js';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GetJob200ResponseFromJSON,
    GetJob200ResponseToJSON,
} from '../models/index.js';

export interface GetJobRequest {
    jobGid: string;
    optPretty?: boolean;
    optFields?: Array<GetJobOptFieldsEnum>;
}

/**
 * 
 */
export class JobsApi extends runtime.BaseAPI {

    /**
     * Returns the full record for a job.
     * Get a job by id
     */
    async getJobRaw(requestParameters: GetJobRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetJob200Response>> {
        if (requestParameters['jobGid'] == null) {
            throw new runtime.RequiredError(
                'jobGid',
                'Required parameter "jobGid" was null or undefined when calling getJob().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['optPretty'] != null) {
            queryParameters['opt_pretty'] = requestParameters['optPretty'];
        }

        if (requestParameters['optFields'] != null) {
            queryParameters['opt_fields'] = requestParameters['optFields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("personalAccessToken", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }


        let urlPath = `/jobs/{job_gid}`;
        urlPath = urlPath.replace(`{${"job_gid"}}`, encodeURIComponent(String(requestParameters['jobGid'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetJob200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the full record for a job.
     * Get a job by id
     */
    async getJob(requestParameters: GetJobRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetJob200Response> {
        const response = await this.getJobRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetJobOptFieldsEnum = {
    NewGraphExport: 'new_graph_export',
    NewGraphExportCompletedAt: 'new_graph_export.completed_at',
    NewGraphExportCreatedAt: 'new_graph_export.created_at',
    NewGraphExportDownloadUrl: 'new_graph_export.download_url',
    NewProject: 'new_project',
    NewProjectName: 'new_project.name',
    NewProjectTemplate: 'new_project_template',
    NewProjectTemplateName: 'new_project_template.name',
    NewResourceExport: 'new_resource_export',
    NewResourceExportCompletedAt: 'new_resource_export.completed_at',
    NewResourceExportCreatedAt: 'new_resource_export.created_at',
    NewResourceExportDownloadUrl: 'new_resource_export.download_url',
    NewTask: 'new_task',
    NewTaskCreatedBy: 'new_task.created_by',
    NewTaskName: 'new_task.name',
    NewTaskResourceSubtype: 'new_task.resource_subtype',
    NewTaskTemplate: 'new_task_template',
    NewTaskTemplateName: 'new_task_template.name',
    ResourceSubtype: 'resource_subtype',
    Status: 'status'
} as const;
export type GetJobOptFieldsEnum = typeof GetJobOptFieldsEnum[keyof typeof GetJobOptFieldsEnum];
